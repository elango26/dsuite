{"version":3,"sources":["webpack:///./src/app/layout/transactions/sales/sales.component.html","webpack:///./src/app/layout/transactions/sales/sales.component.scss","webpack:///./src/app/layout/transactions/sales/sales.component.ts"],"names":[],"mappings":"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","file":"default~reports-reports-module~transactions-transactions-module.js","sourcesContent":["module.exports = \"<mat-card>\\r\\n  <mat-card-header class=\\\"align-flex-center\\\">\\r\\n      <mat-card-title class=\\\"invoice-title\\\">Sales Invoice</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content class=\\\"content-font-size\\\">      \\r\\n        <form [formGroup]=\\\"custForm\\\">\\r\\n          <section class=\\\"example-section\\\">\\r\\n              <mat-form-field class=\\\"example-margin customer-col\\\">\\r\\n                  <input type=\\\"text\\\" #customerName placeholder=\\\"Customer Name\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"customerName\\\" [matAutocomplete]=\\\"customer\\\">\\r\\n                  <button tabindex=\\\"-1\\\" mat-icon-button matSuffix (click)=\\\"clear('custForm','customerName')\\\">\\r\\n                    <mat-icon>{{custForm.value.customerName?'clear':''}}</mat-icon>\\r\\n                  </button>\\r\\n                  <mat-autocomplete autoActiveFirstOption (optionSelected)='loadCustomerRateType($event.option.value)' #customer=\\\"matAutocomplete\\\" [displayWith]=\\\"displayCustomerFn\\\">\\r\\n                    <mat-option *ngFor=\\\"let customer of customerFilteredOptions | async\\\"  [value]=\\\"customer\\\">\\r\\n                      {{customer.customerName}}-{{customer.routes.areaName}}-{{customer.customer_id|slice:-3}}\\r\\n                    </mat-option>\\r\\n                  </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"example-margin date-col\\\">\\r\\n                <input tabindex=\\\"-1\\\" matInput disabled [max]=\\\"custFormMaxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"curDate\\\">\\r\\n                <mat-datepicker-toggle tabindex=\\\"-1\\\" matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker disabled=\\\"false\\\" #picker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n          </section>\\r\\n        </form>    \\r\\n    </mat-card-content>\\r\\n<mat-card class=\\\"desc-bg\\\">\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"form\\\" (keyup.enter)=\\\"onSubmit()\\\">\\r\\n      <section class=\\\"example-section\\\">\\r\\n          <mat-form-field class=\\\"example-margin prod-col\\\">\\r\\n              <input type=\\\"text\\\" #typehead #productName placeholder=\\\"Product Name / Code\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"productName\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n              <!-- <button mat-icon-button matSuffix (click)=\\\"clear('form','productName')\\\"> -->\\r\\n                <mat-icon mat-icon-button matSuffix (click)=\\\"clear('form','productName')\\\">{{form.value.productName?'clear':''}}</mat-icon>\\r\\n              <!-- </button> -->\\r\\n              <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\r\\n                <mat-option *ngFor=\\\"let option of filteredOptions | async\\\"  [value]=\\\"option\\\">\\r\\n                  {{option.prod_name}}\\r\\n                </mat-option>\\r\\n              </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"example-margin quantity-col\\\">\\r\\n            <input matInput #quantity formControlName=\\\"quantity\\\" placeholder=\\\"Quantity\\\" type=\\\"number\\\">\\r\\n          </mat-form-field>\\r\\n      </section>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"sno\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> S No </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row;let i = index;\\\" > {{i+1}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>  </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Progress Column -->\\r\\n      <ng-container matColumnDef=\\\"productName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_name}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef> <span class=\\\"span-text\\\"> Round off </span> <br> <span class=\\\"span-text\\\">Discounts</span> </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"quantity\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_quan | number : '1.2-2'}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> <span class=\\\"span-text\\\"> {{gross_amt.roundoff_sym}} {{gross_amt.roundoff_val|currency:'INR'}} </span> <br> <span class=\\\"span-text\\\">- {{gross_amt.discount|currency:'INR'}}</span></td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"rate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Rate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_rate_per_unit|currency:'INR'}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>  </td>\\r\\n        </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"tax\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Tax </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_tax|currency:'INR'}}@{{row.tax|number : '1.2-2'}}%</td>\\r\\n          <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"amount\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.sub_amount|currency:'INR'}}</td>\\r\\n        <!-- <td mat-footer-cell *matFooterCellDef> Discounts </td> -->\\r\\n        <td mat-footer-cell *matFooterCellDef class=\\\"align-right\\\"> {{gross_amt.total|currency:'INR'}} </td>\\r\\n      </ng-container>   \\r\\n      \\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row; let n = index\\\">\\r\\n          <span (click)=\\\"_remove(row,n)\\\"><i class=\\\"material-icons anchor\\\">\\r\\n            delete_forever\\r\\n            </i></span>\\r\\n        </td>\\r\\n        <td mat-footer-cell *matFooterCellDef>  </td>\\r\\n      </ng-container> \\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns;\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  </table>\\r\\n  <ng-container *ngIf=\\\"!dataSource || transaction_desc.length === 0\\\">\\r\\n      <mat-card class=\\\"norecords\\\">Please add products !!</mat-card>\\r\\n  </ng-container>\\r\\n  </div>\\r\\n  </mat-card>\\r\\n  <br>\\r\\n  <div>\\r\\n    <a *ngIf=\\\"lastSales\\\" class=\\\"anchor\\\" (click)=\\\"openSalesModal(lastSales.saleid)\\\">Last Sales: {{lastSales.saleamount | currency:'INR'}}</a>\\r\\n    <!-- <a class=\\\"anchor\\\">450.00</a> -->\\r\\n    <div class=\\\"margin-left\\\">\\r\\n      <mat-form-field>\\r\\n      <mat-select matInput name=\\\"payment_type\\\" [(ngModel)]=\\\"default_payment_type\\\" placeholder=\\\"Payment Type\\\">\\r\\n        <mat-option *ngFor=\\\"let opt of payment_types\\\" [value]=\\\"opt.key\\\">{{opt.value}}</mat-option>\\r\\n      </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"pull-right\\\">\\r\\n    <button mat-raised-button color=\\\"default\\\" (click)=\\\"resetForm()\\\">Reset</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!dataSource || transaction_desc.length === 0\\\" (click)=\\\"_saveOrder('print')\\\">Print</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!dataSource || transaction_desc.length === 0\\\" (click)=\\\"_saveOrder('save')\\\">Save</button>\\r\\n  </div>\\r\\n</mat-card>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.prod-col {\\n  width: 70%; }\\n\\n.quantity-col {\\n  width: 30%; }\\n\\n.customer-col {\\n  width: 70%;\\n  font-size: 1.34em; }\\n\\n.date-col {\\n  width: 30%;\\n  font-size: 1.34em; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\\n.clearpix {\\n  margin-top: 10px; }\\n\\n.norecords {\\n  text-align: center;\\n  font: menu; }\\n\\n.desc-bg {\\n  background-color: #BEC4EE; }\\n\\n.invoice-title {\\n  font-weight: bold;\\n  font-size: 1.5em;\\n  padding-bottom: 0.3em; }\\n\\n.pull-right {\\n  display: block;\\n  text-align: right; }\\n\\n.pull-right button {\\n    margin-left: 0.23em; }\\n\\n.span-text {\\n  font-style: italic;\\n  color: grey;\\n  font-size: smaller; }\\n\\n.anchor {\\n  cursor: pointer; }\\n\\n.margin-left {\\n  width: 50%;\\n  margin-left: 50%; }\\n\\n.mat-elevation-z8 {\\n  overflow: auto; }\\n\\n.align-flex-center {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.content-font-size {\\n  font-size: 0.9em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3RyYW5zYWN0aW9ucy9zYWxlcy9DOlxcbG9jYWxkaXNrXFxteXdvcmtcXGRzdWl0ZVxcY2xpZW50L3NyY1xcYXBwXFxsYXlvdXRcXHRyYW5zYWN0aW9uc1xcc2FsZXNcXHNhbGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVyxFQUNkOztBQUVEO0VBQ0ksZ0JBQWU7RUFDZixZQUFXLEVBQ2Q7O0FBR0Q7RUFDSSxjQUFhO0VBQ2Isc0JBQXFCO0VBQ3JCLG9CQUFtQjtFQUNuQixhQUFZLEVBQ2Y7O0FBRUQ7RUFDSSxXQUFVLEVBQ2I7O0FBRUQ7RUFDSSxXQUFVLEVBQ2I7O0FBRUQ7RUFDSSxXQUFVO0VBQ1Ysa0JBQWlCLEVBRXBCOztBQUNEO0VBQ0ksV0FBVTtFQUNWLGtCQUFpQixFQUVwQjs7QUFDRDtFQUNJLGFBQVksRUFDZjs7QUFFRDtFQUNJLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLG1CQUFrQjtFQUNsQixXQUFVLEVBQ2I7O0FBRUQ7RUFDSSwwQkFBeUIsRUFDNUI7O0FBRUQ7RUFDSSxrQkFBaUI7RUFDakIsaUJBQWdCO0VBQ2hCLHNCQUFxQixFQUN4Qjs7QUFFRDtFQUNJLGVBQWE7RUFDYixrQkFBaUIsRUFJcEI7O0FBTkQ7SUFJUSxvQkFBbUIsRUFDdEI7O0FBR0w7RUFDSSxtQkFBa0I7RUFDbEIsWUFBVztFQUNYLG1CQUFrQixFQUNyQjs7QUFFRDtFQUNJLGdCQUFlLEVBQ2xCOztBQUVEO0VBQ0ksV0FBVTtFQUNWLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLGVBQWMsRUFDakI7O0FBRUQ7RUFDSSxjQUFhO0VBQ2Isb0JBQW1CO0VBQ25CLHdCQUF1QixFQUMxQjs7QUFFRDtFQUNJLGlCQUFnQixFQUNuQiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC90cmFuc2FjdGlvbnMvc2FsZXMvc2FsZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5cclxuLmV4YW1wbGUtc2VjdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogNjBweDtcclxufVxyXG5cclxuLnByb2QtY29se1xyXG4gICAgd2lkdGg6IDcwJTtcclxufVxyXG5cclxuLnF1YW50aXR5LWNvbHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbn1cclxuXHJcbi5jdXN0b21lci1jb2x7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgZm9udC1zaXplOiAxLjM0ZW07XHJcbiAgICBcclxufVxyXG4uZGF0ZS1jb2x7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgZm9udC1zaXplOiAxLjM0ZW07XHJcbiAgICBcclxufVxyXG4uZXhhbXBsZS1tYXJnaW4ge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4uY2xlYXJwaXgge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLm5vcmVjb3Jkc3tcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQ6IG1lbnU7XHJcbn1cclxuXHJcbi5kZXNjLWJne1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0JFQzRFRTtcclxufVxyXG5cclxuLmludm9pY2UtdGl0bGV7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMC4zZW07XHJcbn1cclxuXHJcbi5wdWxsLXJpZ2h0e1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwLjIzZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zcGFuLXRleHQge1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgY29sb3I6IGdyZXk7XHJcbiAgICBmb250LXNpemU6IHNtYWxsZXI7XHJcbn1cclxuXHJcbi5hbmNob3Ige1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ubWFyZ2luLWxlZnQge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiA1MCU7XHJcbn1cclxuXHJcbi5tYXQtZWxldmF0aW9uLXo4IHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4uYWxpZ24tZmxleC1jZW50ZXJ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uY29udGVudC1mb250LXNpemUge1xyXG4gICAgZm9udC1zaXplOiAwLjllbTtcclxufSJdfQ== */\"","import { Directive, Component, OnInit, ViewChild, ElementRef, HostListener } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl, ValidatorFn } \r\n    from '@angular/forms';\r\nimport { MatTableDataSource,MatSnackBar, MatDialog, MatAutocompleteTrigger } from '@angular/material';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Product } from 'src/app/interfaces/product';\r\nimport { Customer } from 'src/app/interfaces/customer';\r\nimport { TransactionDesc, Sales, DiscountTransaction } from 'src/app/interfaces/transaction';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { formControlBinding } from '@angular/forms/src/directives/reactive_directives/form_control_directive';\r\nimport { DEFAULT_RATE_TYPE,PAYMENT_TYPE,DEFAULT_PAYMENT_TYPE } from '../../../constants/contants';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PrinterService } from 'src/app/services/printer.service';\r\nimport { GenericResp } from 'src/app/interfaces/genericResp';\r\nimport { SalesReportPopComponent } from '../../common/sales-report-pop/sales-report-pop.component';\r\nimport { keyValuesToMap } from '@angular/flex-layout/extended/typings/style/style-transforms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NG_DIRECTIVE_DEF } from '@angular/core/src/render3/fields';\r\nimport { gross_amount } from 'src/app/interfaces/sales';\r\n\r\nexport function objValidator(obj:any): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n      if (control.value && !control.value[obj]) {\r\n          return { 'valid': true };\r\n      }\r\n      return null;\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sales',\r\n  templateUrl: './sales.component.html',\r\n  styleUrls: ['./sales.component.scss']\r\n})\r\nexport class SalesComponent implements OnInit {\r\n  displayedColumns = ['sno','productName','quantity','rate','tax','amount','action'];\r\n  dataSource: MatTableDataSource<TransactionDesc>;\r\n\r\n  form: FormGroup;\r\n  custForm: FormGroup;\r\n  productList: Product[];\r\n  customerList: Customer[];\r\n  transaction_desc: TransactionDesc[]=[];\r\n  discount_desc: DiscountTransaction[]=[];\r\n  filteredOptions: Observable<Product[]>;\r\n  customerFilteredOptions: Observable<Customer[]>;\r\n  sale_type: string = DEFAULT_RATE_TYPE;\r\n  sale_type_arr: any[];\r\n  lastSales:any;\r\n  custFormMaxDate = new Date();\r\n  availableDiscounts: any[];\r\n  payment_types: any[]=[];\r\n  default_payment_type:string;\r\n  roundoff_det: any = {val:0,sym:'+'};\r\n  gross_amt:gross_amount;\r\n  common_rate_type:string = '';\r\n\r\n  @ViewChild(\"productName\") prodField: ElementRef;\r\n  @ViewChild(\"quantity\") quanField: ElementRef;\r\n  @ViewChild(\"customerName\") custField: ElementRef;\r\n  @ViewChild('typehead', {read:MatAutocompleteTrigger})  autoTrigger: MatAutocompleteTrigger;\r\n\r\n  constructor(private commonService: CommonService, public snackBar: MatSnackBar,private router: Router, private route: ActivatedRoute, \r\n    public printerService: PrinterService, public dialog: MatDialog, private datePipe: DatePipe) { \r\n    this.form = new FormGroup({\r\n      'productName': new FormControl('',[Validators.required,objValidator('prod_name')]),\r\n      'quantity': new FormControl('',Validators.required)\r\n    });\r\n    this.custForm = new FormGroup({\r\n      'customerName': new FormControl('',[Validators.required,objValidator('customerName')]),\r\n      'curDate': new FormControl(new Date(),Validators.required)\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.productList = this.commonService.products;\r\n    // this._callFilter();  \r\n    this.loadProduct();\r\n    this.loadCustomers();\r\n    this.loadDiscounts(); \r\n    this.getTotalCost(); // load init values\r\n    this.default_payment_type = DEFAULT_PAYMENT_TYPE;\r\n    PAYMENT_TYPE.forEach(t=>{\r\n      if(t != 'CREDIT'){\r\n        this.payment_types.push({\r\n          key: t,\r\n          value: t\r\n        })\r\n      }\r\n    });\r\n    //\"POS0000013\"\r\n    // this.lastSales = {\r\n    //   saleid: \"POS0000013\",\r\n    //   saleamount: \"768\"\r\n    // }\r\n    this.onChanges();\r\n    this.custField.nativeElement.focus();\r\n  }\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    let validKeycodes = [120,121];\r\n    if(validKeycodes.indexOf(event.keyCode) > -1 ){\r\n      event.preventDefault();\r\n      if(this.transaction_desc.length > 0){\r\n        let type = event.keyCode == 120 ? 'print':'save';        \r\n        this._saveOrder(type);      \r\n      }\r\n    }\r\n\r\n    //reset\r\n    if(event.keyCode == 27){\r\n      event.preventDefault();\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit()\r\n  {\r\n    this.autoTrigger.panelClosingActions.subscribe( x =>{\r\n      if (this.autoTrigger.activeOption)\r\n      {\r\n        //console.log(this.autoTrigger.activeOption.value);\r\n        this.form.patchValue({'productName':this.autoTrigger.activeOption.value});\r\n        this.form.patchValue({'quantity':1});\r\n        this.quanField.nativeElement.focus();\r\n        this.quanField.nativeElement.select();\r\n      }\r\n    } )\r\n  }\r\n\r\n  clear(key:string,name:string){\r\n    this[key].patchValue({[name]:''});\r\n  }\r\n\r\n  onChanges() : void{\r\n    this.custForm.get('customerName').valueChanges.subscribe(val => {\r\n      if(val.customerName){\r\n        this.payment_types.push({key:'CREDIT',value:'CREDIT'});\r\n      }\r\n    });\r\n  }\r\n\r\n  loadDiscounts(){\r\n    //this.availableDiscounts = this.commonService.getSearchDiscountList(this.custForm.value.curDate);\r\n    this.availableDiscounts = this.commonService.getDiscountList();\r\n  }\r\n\r\n  loadCustomers(){\r\n    this.commonService.getMethod(environment.urls.getCustomer+'?isactive=yes').subscribe((data:Customer[]) => {\r\n      this.customerList = data;\r\n      this._callCustomerFilter();  \r\n    });\r\n  }\r\n\r\n  loadProduct(){\r\n    this.commonService.getMethod(environment.urls.getProduct).subscribe((data:Product[]) => {\r\n      this.productList = data;\r\n      this._callFilter();  \r\n    });\r\n  }\r\n\r\n  displayFn(prod?: Product): string | undefined {\r\n    return prod ? prod.prod_name : undefined;\r\n  }\r\n\r\n  //load customer rate type for all products\r\n  public loadCustomerRateType(cust:Customer){\r\n    //assign global rate_type here\r\n    this.common_rate_type = cust.common_ratetype?cust.common_ratetype:DEFAULT_RATE_TYPE;\r\n    this.commonService.getMethod(environment.urls.getRateTypeByCustomer+'/'+cust._id).subscribe((data:any) => {\r\n      this.sale_type_arr = data;\r\n    });\r\n  }\r\n\r\n  displayCustomerFn(cust?: Customer): string | undefined {\r\n    return cust ? cust.customerName : undefined;\r\n  }  \r\n\r\n  private _callCustomerFilter(){\r\n    this.customerFilteredOptions = this.custForm.get(\"customerName\").valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => (value && value.length >= 1) ?this._custFilter(value):[])\r\n      );\r\n  }\r\n\r\n  private _callFilter(){\r\n    this.filteredOptions = this.form.get(\"productName\").valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => (value && value.length >= 1) ? this._filter(value):[])\r\n      );\r\n  }\r\n\r\n  private _filter(value: string): Product[] {\r\n    let filterValue = (typeof value == 'string')?value.toLowerCase():\"\";\r\n    return this.productList.filter(option => option.prod_name.toLowerCase().includes(filterValue) || option.barcode == filterValue);\r\n    //bar code scanning\r\n    //let filterValue;\r\n    // if(typeof value == 'string'){\r\n    //   filterValue = value.toLowerCase();\r\n    // }\r\n  }\r\n\r\n  private _custFilter(value: string): Customer[] {\r\n    let filterValue = (typeof value == 'string')?value.toLowerCase():\"\";\r\n    return this.customerList.filter(customer => customer.customerName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onSubmit(){\r\n    // console.log('submit');\r\n    if(this.form.status == \"VALID\" && this.form.value.quantity > 0){\r\n      let product = this.form.value.productName;\r\n      if(this.sale_type_arr){\r\n        let customer_rate_type = this.sale_type_arr.filter(key => key.prod_id == product._id)[0]; //find customer rate type\r\n        if(customer_rate_type){\r\n          this.sale_type = customer_rate_type.type;\r\n        } else { //take common rate_type for this customer\r\n          this.sale_type = this.common_rate_type;\r\n        }          \r\n      }\r\n      let rate = this.commonService.getProductPrice(product._id,this.sale_type); // find rate based oo type\r\n\r\n      if(rate == null){\r\n        this.snackBar.open(\"Rate not found for this product!!\", \"Notice\", {\r\n          duration: 1000,\r\n        });\r\n        return false;\r\n      }\r\n      //replace and sum the existing product added\r\n      // let descs = this.transaction_desc;\r\n      // let exist_quan = 0;\r\n      // for(let key in descs){\r\n      //   if(descs[key].prod_id == product._id){\r\n      //     exist_quan += descs[key].prod_quan;\r\n      //     this.transaction_desc.splice(parseInt(key),1);\r\n      //   }\r\n      // }\r\n      // this.form.value.quantity += exist_quan;\r\n      this.form.value.quantity += this.transaction_desc.filter(d=>d.prod_id == product._id).reduce((acc,val)=> {return acc+val.prod_quan},0);\r\n      this.transaction_desc = this.transaction_desc.filter(d=> d.prod_id != product._id);\r\n      \r\n      // discounts calculation\r\n      let var_for_dis = {\r\n        form: this.form,\r\n        cus_form: this.custForm,\r\n        product: product,\r\n        sale_type: this.sale_type\r\n      }\r\n      let discount_id = this._calculateDiscounts(var_for_dis);\r\n      // discounts end\r\n\r\n      let trans_desc:TransactionDesc = {\r\n        rate_type: this.sale_type,\r\n        prod_name:product.prod_name,\r\n        prod_id : product._id,\r\n        product_id: product.product_id,\r\n        prod_quan : this.form.value.quantity,\r\n        prod_rate_per_unit : rate.price,\r\n        tax: rate.tax?rate.tax:0,\r\n        discount_id:discount_id,\r\n        prod_tax : rate.tax ? (rate.price * this.form.value.quantity)*rate.tax/100:0,\r\n        sub_amount : (rate.price * this.form.value.quantity)\r\n      }\r\n      this.transaction_desc.push(trans_desc);\r\n      this.getTotalCost();\r\n\r\n      this.form.reset();      \r\n      this.dataSource = new MatTableDataSource(this.transaction_desc);      \r\n      //console.log(this.transaction_desc.length);\r\n      this._callFilter();\r\n      this.prodField.nativeElement.focus();\r\n    } else if(typeof this.form.value.productName == 'object'){\r\n      this.quanField.nativeElement.focus();\r\n      this.form.patchValue({'quantity':1});\r\n      this.quanField.nativeElement.select();\r\n      //while changing abv code check method ngAfterViewInit\r\n    }\r\n  }\r\n\r\n  _calculateDiscounts(vars:any):string{\r\n    let discounts = [],_did = null;\r\n    let sys_date = this.datePipe.transform(new Date(),'yyyy-MM-dd');\r\n    let sale_date = this.datePipe.transform(this.custForm.value.curDate,'yyyy-MM-dd');\r\n  \r\n    if( sys_date != sale_date || !this.availableDiscounts){   //if sale date is diff or discount not loaded     \r\n      this.commonService.getSearchDiscountList(sale_date).subscribe((data:any[]) => {\r\n        this.availableDiscounts = data;\r\n      }); \r\n    }\r\n\r\n    discounts = this.availableDiscounts;\r\n    let matching = [];\r\n    if(discounts && discounts.length > 0){\r\n      matching = discounts.filter(function(dis) { return dis.buy_prod_id == vars.product._id && vars.form.value.quantity > dis.buy_count && (dis.applicable_customer.indexOf('all') > -1 || dis.applicable_customer.indexOf(vars.cus_form.value.customerName.customer_id) > -1)});\r\n    }\r\n    //console.log(matching);\r\n    if(matching.length > 0){\r\n      //_did = matching[0]._id;\r\n      switch(matching[0].discount_type){\r\n        case 'P2P':\r\n          let free_count = 0;\r\n          let quotient = 0;\r\n          let purchased_quan = vars.form.value.quantity;\r\n          if(matching[0].applicable_type.indexOf(vars.sale_type) >=0){\r\n            _did = matching[0]._id;\r\n            quotient = Math.floor(purchased_quan / matching[0].buy_count);\r\n            free_count = quotient * matching[0].free_count;\r\n\r\n            let free_product = matching[0].free_product[0];\r\n            let rate = this.commonService.getProductPrice(free_product._id,vars.sale_type);\r\n            // let trans_desc:TransactionDesc = {\r\n            //   rate_type: 'Discount',\r\n            //   prod_name:free_product.prod_name,\r\n            //   prod_id : free_product._id,\r\n            //   product_id: free_product.product_id,\r\n            //   prod_quan : free_count,\r\n            //   prod_rate_per_unit : rate.price,\r\n            //   discount_id: matching[0]._id,\r\n            //   tax: 0,\r\n            //   prod_tax : 0,\r\n            //   sub_amount : rate.price * free_count\r\n            // }\r\n            // this.transaction_desc.push(trans_desc);\r\n\r\n            let exist = this.discount_desc.filter(d=> d.discount_id == _did);\r\n            if(this.discount_desc.length >0 && exist.length >0){\r\n              this.discount_desc.map(d=>{\r\n                if(d.discount_id == _did){\r\n                  d.prod_count = free_count;\r\n                  d.total_amount = rate.price * free_count\r\n                }\r\n              })\r\n            }else{\r\n              let discount_desc:DiscountTransaction = {\r\n                discount_id: matching[0]._id,\r\n                prod_id: free_product.product_id,\r\n                prod_count: free_count,\r\n                total_amount: rate.price * free_count\r\n              }\r\n              this.discount_desc.push(discount_desc);\r\n            }\r\n            //console.log(this.discount_desc);\r\n          }\r\n          break;\r\n        case 'Price':\r\n          break;\r\n        case 'Percentage':\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return _did;\r\n  }\r\n\r\n  _remove(row:any,n:number):void{\r\n    this.transaction_desc.splice(n,1);\r\n    //console.log(row);\r\n    if(row.discount_id && row.discount_id != ''){\r\n      this.discount_desc = this.discount_desc.filter(dis=>dis.discount_id != row.discount_id);\r\n      this.transaction_desc = this.transaction_desc.filter(t=>t.discount_id != row.discount_id);\r\n    }\r\n    this.getTotalCost();\r\n    this.dataSource = new MatTableDataSource(this.transaction_desc);\r\n  }\r\n\r\n  getTotalDiscount():number{\r\n    console.log('discount called');\r\n    return this.discount_desc.map(d => d.total_amount).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n\r\n\r\n  getTotalCost():void {\r\n    console.log('total called');\r\n    let discounts = this.getTotalDiscount();\r\n    let actual_amt = (this.transaction_desc.map(t => t.sub_amount).reduce((acc, value) => acc + value, 0)+this.transaction_desc.map(t => t.prod_tax).reduce((acc, value) => acc + value, 0)) - discounts;\r\n    let roundoff = actual_amt % 1;\r\n    if(roundoff >= 0.5){\r\n      this.roundoff_det = {\r\n        val:(1-roundoff),\r\n        sym: '+'\r\n      }\r\n    }else{\r\n      this.roundoff_det = {\r\n        val:-roundoff,\r\n        sym: ''\r\n      }      \r\n    }\r\n    this.gross_amt = {\r\n      discount: discounts,\r\n      roundoff_sym: this.roundoff_det.sym,\r\n      roundoff_val: this.roundoff_det.val,\r\n      total: actual_amt + this.roundoff_det.val\r\n    }\r\n    //return actual_amt + this.roundoff_det.val;\r\n  }\r\n\r\n  _saveOrder(type:string):void{      \r\n    let data: Sales = {\r\n      customer_id: this.custForm.value.customerName._id,\r\n      sale_date: this.custForm.value.curDate,\r\n      total_amount: this.gross_amt.total, //this.getTotalCost(),\r\n      roundOff: this.roundoff_det,\r\n      payment_type: this.default_payment_type,\r\n      details: this.transaction_desc,\r\n      discounts: this.discount_desc\r\n    }\r\n    this.transaction_desc = [];\r\n    this.discount_desc = [];\r\n    this.dataSource = new MatTableDataSource(this.transaction_desc);\r\n     \r\n    this.commonService.postMethod(environment.urls.postSales,data).subscribe((data:GenericResp) =>{  \r\n      if(data.code == 200){\r\n        this.snackBar.open(\"Saved successfully!!\", \"Success\", {\r\n          duration: 500,\r\n        });\r\n\r\n        //last sales show\r\n        //\"POS0000013\"\r\n        this.lastSales = {\r\n          saleid: data.data.sale_id,\r\n          saleamount: data.data.total_amount\r\n        }\r\n\r\n        //print\r\n        if(type == 'print'){\r\n          this.printerService.printData = {\r\n            redirectUrl: '/transactions',\r\n            format: 'invoice',\r\n            data: [data.data.sale_id],\r\n            type: 'SALES',\r\n            date: new Date() // dummy date\r\n          }\r\n          this.router.navigate(['/layout',{ outlets: { printpage: 'printview' }}],{ skipLocationChange: true });\r\n        }  \r\n      }else{\r\n        this.snackBar.open(\"Error!!\", \"Error\", {\r\n          duration: 600,\r\n        });\r\n      }\r\n      \r\n    },error =>{\r\n      this.snackBar.open(error, \"Error\", {\r\n        duration: 600,\r\n      });\r\n    });   \r\n    this.form.reset();\r\n    this.getTotalCost();\r\n    //reset form\r\n    this.custForm = new FormGroup({\r\n      'customerName': new FormControl('',Validators.required),\r\n      'curDate': new FormControl(new Date(),Validators.required)\r\n    });\r\n    //after reset call filters\r\n    this._callCustomerFilter();  \r\n    this._callFilter();  \r\n  }\r\n\r\n  //sales report page\r\n  openSalesModal(saleid:string){\r\n    const dialogRef = this.dialog.open(SalesReportPopComponent, {\r\n      width: '500px',\r\n      data: {saleid:saleid}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      //reload\r\n    });\r\n  }\r\n\r\n  resetForm(){\r\n    //this.custForm.reset();\r\n    this.form.reset();\r\n    this.transaction_desc = [];\r\n    this.discount_desc = [];\r\n    this.dataSource = new MatTableDataSource(this.transaction_desc);\r\n    this.default_payment_type = DEFAULT_PAYMENT_TYPE;\r\n    this.custForm.setValue({'customerName':'','curDate':new Date()});\r\n    this.gross_amt = {\r\n      discount: 0,\r\n      roundoff_sym: '',\r\n      roundoff_val: 0,\r\n      total: 0\r\n    };\r\n    // this.custForm = new FormGroup({\r\n    //   'customerName': new FormControl('',[Validators.required,objValidator('customerName')]),\r\n    //   'curDate': new FormControl(new Date(),Validators.required)\r\n    // });\r\n  }\r\n\r\n}"],"sourceRoot":""}