{"version":3,"sources":["webpack:///./src/app/layout/orders/deliveries/cons-view/cons-view.component.html","webpack:///./src/app/layout/orders/deliveries/cons-view/cons-view.component.scss","webpack:///./src/app/layout/orders/deliveries/cons-view/cons-view.component.ts","webpack:///./src/app/layout/orders/deliveries/deliveries.component.html","webpack:///./src/app/layout/orders/deliveries/deliveries.component.scss","webpack:///./src/app/layout/orders/deliveries/deliveries.component.ts","webpack:///./src/app/layout/orders/deliveries/print-deliveries.component.html","webpack:///./src/app/layout/orders/orders-routing.module.ts","webpack:///./src/app/layout/orders/orders.module.ts","webpack:///./src/app/services/common.service.ts"],"names":[],"mappings":"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","file":"orders-orders-module.js","sourcesContent":["module.exports = \"<!-- <div mat-dialog-title>\\n  <h1>Consolidate View</h1>  \\n  <h4>Route:</h4>\\n  <h4>Date:</h4>\\n</div> -->\\n<h1 mat-dialog-title>Consolidate View  <span>Route: {{form_value.route}} | Date: {{form_value.date | date:'fullDate'}}</span></h1>\\n<mat-form-field>\\n  <mat-label>Filter</mat-label>\\n  <input matInput tabindex=\\\"-1\\\" (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. Milk, SM\\\">\\n</mat-form-field>\\n\\n<div class=\\\"\\\" mat-dialog-content>\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- ID Column -->\\n    <ng-container matColumnDef=\\\"sno\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Sno </th>\\n      <td mat-cell *matCellDef=\\\"let row;let i=index\\\"> {{i+1}} </td>\\n    </ng-container>\\n\\n    <!-- Progress Column -->\\n    <ng-container matColumnDef=\\\"category\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Category </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.products.category}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"product\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Name </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.products.prod_name}} </td>\\n    </ng-container>\\n\\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"grade\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Grade </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.count/row.products.quan_per_grade|round}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"piece\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Pieces </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.count%row.products.quan_per_grade}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd, th {\\n  width: auto; }\\n\\nspan {\\n  font-size: small;\\n  font: menu; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L29yZGVycy9kZWxpdmVyaWVzL2NvbnMtdmlldy9DOlxcbG9jYWxkaXNrXFxteXdvcmtcXGRzdWl0ZVxcY2xpZW50L3NyY1xcYXBwXFxsYXlvdXRcXG9yZGVyc1xcZGVsaXZlcmllc1xcY29ucy12aWV3XFxjb25zLXZpZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxnQkFBZTtFQUNmLFlBQVcsRUFDWjs7QUFFRDtFQUNFLFlBQVcsRUFDWjs7QUFFRDtFQUNFLGlCQUFnQjtFQUNoQixXQUFVLEVBQ1giLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvb3JkZXJzL2RlbGl2ZXJpZXMvY29ucy12aWV3L2NvbnMtdmlldy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIHRkLCB0aCB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICB9XHJcblxyXG4gIHNwYW4ge1xyXG4gICAgZm9udC1zaXplOiBzbWFsbDtcclxuICAgIGZvbnQ6IG1lbnU7XHJcbiAgfSJdfQ== */\"","import {Component, OnInit, ViewChild, Inject, Pipe} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { CommonService } from 'src/app/services/common.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n@Pipe({name: 'round'})\nexport class RoundPipe {\n  transform (input:number) {\n    return Math.floor(input);\n  }\n}\n@Component({\n  selector: 'app-cons-view',\n  templateUrl: './cons-view.component.html',\n  styleUrls: ['./cons-view.component.scss']\n})\nexport class ConsViewComponent implements OnInit {\n  displayedColumns: string[] = ['sno', 'category', 'product', 'grade', 'piece'];\n  dataSource: MatTableDataSource<any>;\n  consolidatedData: any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private commonService: CommonService, \n    public dialogRef: MatDialogRef<ConsViewComponent>, \n    @Inject(MAT_DIALOG_DATA) public form_value: any) {\n      if(form_value.cons_data)\n        this.consolidatedData = form_value.cons_data;\n\n      //console.log(this.consolidatedData);\n      this.dataSource = new MatTableDataSource(this.consolidatedData);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.dataSource.filterPredicate = (data, filter: string)  => {\n        const accumulator = (currentTerm, key) => {\n          return key === 'products' ? currentTerm + data[key].prod_name : currentTerm + data[key];\n        };\n        const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\n        // Transform the filter by converting it to lowercase and removing whitespace.\n        const transformedFilter = filter.trim().toLowerCase();\n        return dataStr.indexOf(transformedFilter) !== -1;\n      };\n  }\n\n  ngOnInit() {\n    \n  }\n\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}","module.exports = \"<form >\\r\\n<!-- <mat-card>\\r\\n    <mat-card-content>\\r\\n        <mat-chip-list aria-label=\\\"Orders\\\">         \\r\\n          <mat-chip color=\\\"accent\\\" *ngFor=\\\"let list of consolidatedList\\\">{{list.alias}}:{{list.count}}</mat-chip>\\r\\n        </mat-chip-list>\\r\\n    </mat-card-content>\\r\\n</mat-card> -->\\r\\n<mat-card>\\r\\n  <mat-card-title>\\r\\n    Deliveries\\r\\n    <mat-icon title=\\\"Print\\\" (click)=\\\"callPrintModal()\\\" class=\\\"print-right\\\">print</mat-icon>\\r\\n    <mat-icon title=\\\"Consolidated view\\\" (click)=\\\"showConsolidated()\\\" class=\\\"print-right\\\">assessment</mat-icon>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <!-- <button type=\\\"button\\\" mat-icon-button class=\\\"visible-md\\\" (click)=\\\"enableSearch=!enableSearch\\\">\\r\\n      <mat-icon aria-label=\\\"Side nav toggle icon\\\">search</mat-icon>\\r\\n    </button>-->\\r\\n    <section class=\\\"example-section\\\" [ngClass]=\\\"{'toggle':enableSearch}\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex fxLayoutGap=\\\"20px\\\">\\r\\n        <span class=\\\"no-margin\\\"><mat-icon (click)=\\\"enableSearch = !enableSearch\\\">search</mat-icon></span>\\r\\n        <mat-form-field fxFlex class=\\\"\\\">\\r\\n            <input matInput name=\\\"searKey\\\" [(ngModel)]=\\\"searKey\\\" (keyup)=\\\"applyFilter()\\\" placeholder=\\\"Filter\\\">\\r\\n            <button mat-icon-button matSuffix (click)=\\\"clear()\\\">\\r\\n              <mat-icon>{{searKey?'clear':''}}</mat-icon>\\r\\n              </button>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex class=\\\"\\\">\\r\\n            <mat-select name=\\\"selRoute\\\" [(ngModel)]=\\\"selRoute\\\" (selectionChange)=\\\"addEvent()\\\" placeholder=\\\"Route\\\" >\\r\\n                <mat-option *ngFor=\\\"let r of routes\\\" [value]=\\\"r.key\\\">{{r.value}}</mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex class=\\\"\\\">\\r\\n          <input matInput disabled [max]=\\\"maxToDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"delDate\\\" (dateInput)=\\\"addEvent()\\\" [(ngModel)]=\\\"delDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker disabled=\\\"false\\\" #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n    </section> \\r\\n    <!-- <mat-accordion class=\\\"example-headers-align\\\" fxLayout=\\\"column\\\">\\r\\n      <mat-expansion-panel class=\\\"search-panel\\\" hideToggle>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n            Search\\r\\n          </mat-panel-title>\\r\\n          <mat-panel-description>\\r\\n            <span>&nbsp;</span>\\r\\n            <mat-icon>find_in_page</mat-icon>\\r\\n          </mat-panel-description>\\r\\n        </mat-expansion-panel-header>\\r\\n          <mat-form-field fxFlex class=\\\"\\\">\\r\\n              <input matInput name=\\\"searKey\\\" [(ngModel)]=\\\"searKey\\\" (keyup)=\\\"addEvent()\\\" placeholder=\\\"Filter\\\">\\r\\n              <button mat-icon-button matSuffix (click)=\\\"clear()\\\">\\r\\n                <mat-icon>{{searKey?'clear':''}}</mat-icon>\\r\\n              </button>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxFlex class=\\\"\\\">\\r\\n              <mat-select name=\\\"selRoute\\\" [(ngModel)]=\\\"selRoute\\\" (selectionChange)=\\\"addEvent()\\\" placeholder=\\\"Route\\\" >\\r\\n                  <mat-option *ngFor=\\\"let r of routes\\\" [value]=\\\"r.key\\\">{{r.value}}</mat-option>\\r\\n              </mat-select>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxFlex class=\\\"\\\">\\r\\n            <input matInput disabled [max]=\\\"maxToDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"delDate\\\" (dateInput)=\\\"addEvent()\\\" [(ngModel)]=\\\"delDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker disabled=\\\"false\\\" #picker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n      </mat-expansion-panel>\\r\\n    </mat-accordion> -->\\r\\n    <mat-accordion class=\\\"example-headers-align\\\" fxLayout=\\\"column\\\">\\r\\n      <ng-container *ngFor=\\\"let row of (deliveryList|async);let i = index\\\">\\r\\n        <mat-expansion-panel [expanded]=\\\"step === i\\\" (opened)=\\\"setStep(i)\\\" >            \\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title >\\r\\n              {{row._id.customer.customerName}}\\r\\n              <span class=\\\"cus-title\\\">-{{row._id.customer.routes[0].areaName}}</span>\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              <span>&nbsp;</span>\\r\\n              <span *ngIf=\\\"row._id.orders\\\">Order Received</span>\\r\\n              <mat-icon>account_circle</mat-icon>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <mat-chip-list *ngIf=\\\"row._id.orders\\\">\\r\\n              <mat-chip *ngFor=\\\"let order of row.details\\\">{{order.products.prod_name}}: <span class=\\\"highlight-text\\\">{{order.prod_quan}}</span> </mat-chip>                                           \\r\\n          </mat-chip-list>   \\r\\n          <div class=\\\"example-button-row\\\">        \\r\\n            <button mat-stroked-button color=\\\"warn\\\" (click)=\\\"editOrder(i,row)\\\">Edit</button>      \\r\\n          </div> \\r\\n          <mat-action-row>\\r\\n            <button mat-button color=\\\"warn\\\" *ngIf=\\\"i!=0\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n            <button mat-button color=\\\"primary\\\" *ngIf=\\\"i != deliveryList.length - 1\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n          </mat-action-row> \\r\\n        </mat-expansion-panel>\\r\\n      </ng-container>\\r\\n    </mat-accordion>\\r\\n    <br>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!enablePlaceOrder()\\\" (click)=\\\"placeOrder()\\\">Place Order</button>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n</form>\"","module.exports = \".mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.example-section {\\n  align-content: center;\\n  align-items: center;\\n  background-color: #E8F1FF;\\n  padding: 10px 15px;\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  margin-bottom: 8px; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\\n.example-button-row {\\n  margin-top: 0.4em; }\\n\\n.example-headers-align .mat-expansion-panel-header-title,\\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0; }\\n\\n.example-headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center; }\\n\\n.print-right {\\n  float: right;\\n  cursor: pointer; }\\n\\n.highlight-text {\\n  padding-left: 4px;\\n  color: #3f51b5;\\n  font-size: medium;\\n  text-shadow: 1px 1px #fff;\\n  font-weight: bold; }\\n\\n.cus-title {\\n  font-size: 0.6em;\\n  color: grey; }\\n\\n.cus-title ::before {\\n    content: \\\"\\\\a\\\";\\n    white-space: pre; }\\n\\n.visible-md {\\n  display: none; }\\n\\n.no-margin {\\n  margin-bottom: 0 !important; }\\n\\n@media screen and (max-width: 992px) {\\n  .visible-md {\\n    display: block; }\\n  .toggle .mat-form-field {\\n    display: none; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L29yZGVycy9kZWxpdmVyaWVzL0M6XFxsb2NhbGRpc2tcXG15d29ya1xcZHN1aXRlXFxjbGllbnQvc3JjXFxhcHBcXGxheW91dFxcb3JkZXJzXFxkZWxpdmVyaWVzXFxkZWxpdmVyaWVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksZ0JBQWU7RUFDZixZQUFXLEVBQ2Q7O0FBR0Q7RUFFSSxzQkFBcUI7RUFDckIsb0JBQW1CO0VBRW5CLDBCQUF5QjtFQUN6QixtQkFBa0I7RUFDbEIsZ0hBQW1HO0VBQ25HLG1CQUFrQixFQUNyQjs7QUFFRDtFQUNJLGFBQVksRUFDZjs7QUFFRDtFQUNJLGtCQUFpQixFQUNwQjs7QUFFRDs7RUFFRSxjQUFhLEVBQ2Q7O0FBRUQ7RUFDRSwrQkFBOEI7RUFDOUIsb0JBQW1CLEVBQ3BCOztBQUVEO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQixFQUNqQjs7QUFFRDtFQUNFLGtCQUFpQjtFQUNqQixlQUFjO0VBQ2Qsa0JBQWlCO0VBQ2pCLDBCQUF5QjtFQUN6QixrQkFBaUIsRUFDbEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsWUFBVyxFQUtaOztBQVBEO0lBSUUsY0FBYTtJQUNiLGlCQUFnQixFQUNmOztBQUdIO0VBQ0UsY0FBYSxFQUNkOztBQUVEO0VBQ0UsNEJBQTRCLEVBQzdCOztBQUVEO0VBQ0U7SUFDSSxlQUFjLEVBQ2pCO0VBRUQ7SUFFSSxjQUFZLEVBQ2IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9vcmRlcnMvZGVsaXZlcmllcy9kZWxpdmVyaWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuXHJcbi5leGFtcGxlLXNlY3Rpb24ge1xyXG4gICAgLy9kaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIC8vIGhlaWdodDogNjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFOEYxRkY7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLC4yKSwgMCAycHggMnB4IDAgcmdiYSgwLDAsMCwuMTQpLCAwIDFweCA1cHggMCByZ2JhKDAsMCwwLC4xMik7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLW1hcmdpbiB7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWJ1dHRvbi1yb3cge1xyXG4gICAgbWFyZ2luLXRvcDogMC40ZW07XHJcbn1cclxuXHJcbi5leGFtcGxlLWhlYWRlcnMtYWxpZ24gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLXRpdGxlLFxyXG4uZXhhbXBsZS1oZWFkZXJzLWFsaWduIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci1kZXNjcmlwdGlvbiB7XHJcbiAgZmxleC1iYXNpczogMDtcclxufVxyXG5cclxuLmV4YW1wbGUtaGVhZGVycy1hbGlnbiAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItZGVzY3JpcHRpb24ge1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ucHJpbnQtcmlnaHR7XHJcbiAgZmxvYXQgOiByaWdodDtcclxuICBjdXJzb3IgOiBwb2ludGVyO1xyXG59XHJcblxyXG4uaGlnaGxpZ2h0LXRleHQge1xyXG4gIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIGNvbG9yOiAjM2Y1MWI1O1xyXG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gIHRleHQtc2hhZG93OiAxcHggMXB4ICNmZmY7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5jdXMtdGl0bGV7XHJcbiAgZm9udC1zaXplOiAwLjZlbTtcclxuICBjb2xvcjogZ3JleTtcclxuICA6OmJlZm9yZXtcclxuICBjb250ZW50OiBcIlxcYVwiO1xyXG4gIHdoaXRlLXNwYWNlOiBwcmU7ICBcclxuICB9XHJcbn1cclxuXHJcbi52aXNpYmxlLW1kIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4ubm8tbWFyZ2lue1xyXG4gIG1hcmdpbi1ib3R0b20gOiAwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7XHJcbiAgLnZpc2libGUtbWQge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcblxyXG4gIC50b2dnbGUge1xyXG4gICAgLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgICAgZGlzcGxheTpub25lO1xyXG4gICAgfVxyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ProdtableComponent } from '../../common/prodtable/prodtable.component';\r\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Product } from 'src/app/interfaces/product';\r\nimport { BootstrapService } from 'src/app/services/bootstrap.service';\r\n//import { RouteObj } from 'src/app/interfaces/route';\r\nimport { PrinterService } from 'src/app/services/printer.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { ConsViewComponent } from './cons-view/cons-view.component';\r\nimport { GenericResp } from 'src/app/interfaces/genericResp';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n//import { ConfirmPopComponent } from 'src/app/app-material/confirm-pop/confirm-pop.component';\r\n\r\n@Component({\r\n  selector: 'app-deliveries',\r\n  templateUrl: './deliveries.component.html',\r\n  styleUrls: ['./deliveries.component.scss']\r\n})\r\nexport class DeliveriesComponent implements OnInit {\r\n  maxToDate: Date;\r\n  delDate: Date;\r\n  selRoute: string = \"all\";\r\n  searKey: string = \"\";\r\n  step = 0;\r\n  routes:any;\r\n\r\n  setStep(index: number) {\r\n    //console.log(index);\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n  deliveryList:BehaviorSubject<any[]> = new BehaviorSubject<any[]>(null);\r\n  tempDeliveryList:any[];\r\n  searDeliveryList:any[];\r\n  productList:any[];\r\n  consolidatedList:any[];\r\n  enableSearch:boolean = false;\r\n  //confirmBox: string = \"YES\";\r\n\r\n  constructor(private datePipe: DatePipe, private commonService: CommonService, private dialog: MatDialog, private bootstrap:BootstrapService,\r\n    private printerService: PrinterService, private router: Router, private userservice: UserService, private snackBar:MatSnackBar) { \r\n      this.router.events.subscribe(val => {\r\n        if (val instanceof NavigationEnd && window.innerWidth <= 992 ) {\r\n            //this.enableSearch = false;\r\n        }\r\n      });\r\n      this.delDate = new Date();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.routes = this.bootstrap.routes.map(function(val) {\r\n      return {\r\n        key:val._id,\r\n        value:val.areaName\r\n      }\r\n    });\r\n    this.routes.push({key:'all',value:'All'});\r\n    this.addEvent();\r\n    let tdy = new Date();\r\n    tdy.setDate(tdy.getDate() +1);\r\n    this.maxToDate = tdy;\r\n  }\r\n\r\n  public addEvent(){\r\n    let q = '?order_date='+this.datePipe.transform(this.delDate,\"yyyy-MM-dd\")+\"&route=\"+this.selRoute;\r\n    //let q = '?order_date='+this.datePipe.transform(this.delDate,\"yyyy-MM-dd\")+\"&route=\"+this.selRoute+\"&search_key=\"+this.searKey;\r\n    this.loadDelivers(q);\r\n    //this.loadConsolidatedOrders(q);\r\n  }\r\n\r\n  private loadDelivers(query:string){    \r\n    this.commonService.getMethod(environment.urls.getDeliveries+query).subscribe((data:any[])=>{\r\n      this.searDeliveryList = data;\r\n      this.applyFilter();\r\n      //this.deliveryList.next(this.tempDeliveryList);\r\n    });\r\n  }\r\n\r\n  // private loadConsolidatedOrders(query:string){\r\n  //   this.commonService.getMethod(environment.urls.getConsolidatedOrderList+query).subscribe((data:any[])=>{  \r\n  //     this.consolidatedList = data;    \r\n  //     //this.generateCosolidatedList(data);\r\n  //   });\r\n  // }\r\n\r\n  // private generateCosolidatedList(consList:any[]){\r\n  //   //console.log(\"Product list\");\r\n  //   let list = this.commonService.getProductList();\r\n  //   for(let key in list){\r\n  //     let count = consList.find(cons => cons._id == list[key]._id);\r\n  //     if(count){\r\n  //       list[key]['count'] = count.count;\r\n  //     }else{\r\n  //       list[key]['count'] = 0;\r\n  //     }\r\n  //   }\r\n  //   //console.log(list);\r\n  //   this.consolidatedList = list;\r\n  // }  \r\n\r\n  public showConsolidated(){\r\n    let q = '?order_date='+this.datePipe.transform(this.delDate,\"yyyy-MM-dd\")+\"&route=\"+this.selRoute+\"&search_key=\"+this.searKey;\r\n    this.commonService.getMethod(environment.urls.getConsolidatedOrderList+q).subscribe((data:any[])=>{  \r\n      this.consolidatedList = data;\r\n      let route = this.routes.filter(r=>r.key == this.selRoute)[0].value;\r\n      const dialogRef = this.dialog.open(ConsViewComponent, {\r\n        width: '90%',\r\n        // height:'100%',\r\n        data: {cons_data:this.consolidatedList,route:route,date:this.delDate},\r\n        //panelClass: 'custom-modalbox'\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        //reload\r\n        //this.addEvent();\r\n      });\r\n    });    \r\n  }\r\n\r\n  clear(){\r\n    this.searKey = '';\r\n    //this.addEvent();\r\n    this.applyFilter();\r\n  }\r\n\r\n  applyFilter() {\r\n    this.tempDeliveryList = this.searDeliveryList;\r\n    if(this.searKey != ''){\r\n      this.tempDeliveryList = this.searDeliveryList.filter(val => val._id.customer.customerName.toLowerCase().indexOf(this.searKey.toLowerCase())>-1);\r\n    }\r\n    this.deliveryList.next(this.tempDeliveryList);\r\n    //let dataList = this.tempDeliveryList;\r\n    //this.deliveryList = dataList.filter((list:any)=>{\r\n    //this.deliveryList = new BehaviorSubject(dataList.filter(list => list._id.customer.customerName.toLowerCase().indexOf(filterValue.toLowerCase()) > -1));\r\n  }\r\n\r\n  enablePlaceOrder(){\r\n    if(this.userservice.user && this.userservice.user.role == \"ADMIN\"){\r\n      return true;\r\n    }else{\r\n      return this.datePipe.transform(this.delDate,\"yyyy-MM-dd\") == this.datePipe.transform(new Date(),\"yyyy-MM-dd\");\r\n    }\r\n  }\r\n\r\n  public editOrder(index:number,o:any){\r\n    // console.log(this.tempDeliveryList[index]);\r\n    // this.tempDeliveryList[index].details[0].prod_quan = 10;\r\n    // this.deliveryList.next(this.tempDeliveryList);\r\n    let isEdit = false;\r\n    if(o._id.orders){\r\n      isEdit = true;\r\n    }\r\n    const dialogRef = this.dialog.open(ProdtableComponent, {\r\n      //width: '90%',\r\n      //height:'80%',\r\n      data: {order_date:this.delDate,order_details:o._id.orders,customer:o._id.customer,edit_details:o.details,url:environment.urls.postOrder,isEdit:isEdit,source:'delivery'},\r\n      panelClass: 'custom-modalbox'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      //reload\r\n      //console.log(result);\r\n      if(result){\r\n        //console.log('yes');\r\n        if(result.details){ // assign values if details avail\r\n          this.tempDeliveryList[index].details = result.details;\r\n          this.tempDeliveryList[index]._id.orders = result.orders;\r\n        }else{ // if empty assign with empty default values\r\n          delete this.tempDeliveryList[index]._id.orders;\r\n          this.tempDeliveryList[index].details[0] = {};\r\n        }        \r\n        //console.log(this.tempDeliveryList);\r\n        this.deliveryList.next(this.tempDeliveryList);\r\n      }\r\n      //this.addEvent();\r\n    });\r\n  }\r\n\r\n  public placeOrder(){\r\n    if(confirm('Make sure all the orders are delivered correctly, if yes click ok')){\r\n      let data = {\r\n        \"orderdate\":this.datePipe.transform(this.delDate,\"yyyy-MM-dd\"),\r\n        \"customerid\":\"all\"\r\n      }\r\n      //environment.urls.postOrderSales\r\n      this.commonService.postMethod(environment.urls.postOrderSales,data).subscribe((data:GenericResp)=>{\r\n        if(data.code == 200){\r\n          this.snackBar.open(data.message, \"Success\", {\r\n            duration: 1000,\r\n          });\r\n          //redirect to dashboard\r\n          this.router.navigate(['/layout/dashboard'],{ skipLocationChange: true });\r\n          //this.addEvent(); // commentted due to unwanted load time in deliveries page\r\n        }else{\r\n          this.snackBar.open(data.message, \"Error\", {\r\n            duration: 1000,\r\n          });\r\n        }      \r\n      });\r\n    }\r\n  }\r\n\r\n  callPrintModal(){\r\n    console.log('printer called');\r\n    const dialogRef = this.dialog.open(DeliveriesPrintComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {      \r\n      var q = result.data.map(function(obj){\r\n        return obj.key;\r\n      }).join(\",\");\r\n      var route_name = result.data.map(function(obj){\r\n        return obj.value;\r\n      }).join(\",\");\r\n      let query = '?order_date='+this.datePipe.transform(this.delDate,\"yyyy-MM-dd\")+\"&route=\"+q;\r\n      this.commonService.getMethod(environment.urls.getDeliveries+query).subscribe((data:any[])=>{\r\n        data['route'] = route_name;\r\n        this.printerService.printData = {\r\n          redirectUrl: '/orders',\r\n          format: 'report',\r\n          data: data,\r\n          type: 'SALES',\r\n          date: this.delDate\r\n        }\r\n        this.router.navigate(['/layout',{ outlets: { printpage: 'printview' }}],{ skipLocationChange: true });\r\n      });      \r\n      \r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'print-deliveries',\r\n  templateUrl: './print-deliveries.component.html',\r\n  styleUrls: ['./deliveries.component.scss']\r\n})\r\nexport class DeliveriesPrintComponent implements OnInit {\r\n  routes: any[];\r\n  masterCheck: boolean = false;\r\n  constructor(public bootstrap:BootstrapService, public snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<DeliveriesPrintComponent>){}\r\n  ngOnInit(){\r\n    this.routes = this.bootstrap.routes.map(function(val) {\r\n      return {\r\n        checked: false,\r\n        key:val._id,\r\n        value:val.areaName\r\n      }\r\n    });\r\n  }\r\n\r\n  isAllSelected(){\r\n    this.masterCheck = this.routes.every(function(item:any) {\r\n      return item.checked == true;\r\n    })\r\n  }\r\n\r\n  checkUncheckAll(){\r\n    this.routes.forEach(obj => {\r\n      obj.checked = this.masterCheck;\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  print(){\r\n    var selectedList = this.routes.filter(function(obj){\r\n      return obj.checked == true;\r\n    });\r\n    this.dialogRef.close({ data: selectedList });\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n      <h2 class=\\\"example-h2\\\">Please select the route</h2>\\r\\n    \\r\\n      <section class=\\\"\\\">\\r\\n        <mat-checkbox class=\\\"example-margin\\\" value=\\\"all\\\" (change)=\\\"checkUncheckAll()\\\" [(ngModel)]=\\\"masterCheck\\\">All</mat-checkbox>\\r\\n      </section>\\r\\n      <section class=\\\"\\\" *ngFor=\\\"let route of routes\\\">\\r\\n        <mat-checkbox class=\\\"example-margin\\\" [value]=\\\"route.key\\\" (change)=\\\"isAllSelected()\\\" [(ngModel)]=\\\"route.checked\\\">{{route.value}}</mat-checkbox>\\r\\n      </section>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n        <button mat-button (click)=\\\"print()\\\">PRINT</button>\\r\\n        <button mat-button (click)=\\\"onNoClick()\\\">CANCEL</button>\\r\\n      </mat-card-actions>\\r\\n</mat-card>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DeliveriesComponent } from './deliveries/deliveries.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch:'prefix',\n    redirectTo: 'deliveries'\n  },\n  {\n    path: 'deliveries',\n    component: DeliveriesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { OrdersRoutingModule } from './orders-routing.module';\nimport { DeliveriesComponent, DeliveriesPrintComponent } from './deliveries/deliveries.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule as FormModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule, MatCardModule, MatCheckboxModule, MatDatepickerModule,\n  MatFormFieldModule, MatInputModule, MatNativeDateModule, MatRadioModule, MatSelectModule,\n  MatSliderModule, MatSlideToggleModule, MatTableModule, MatDialogModule, MatPaginatorModule, MatTooltipModule, MatIconModule\n} from '@angular/material';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatChipsModule} from '@angular/material/chips';\nimport { DsuiteModule } from '../common/dsuite.module';\nimport { ConsViewComponent, RoundPipe } from './deliveries/cons-view/cons-view.component';\n\n@NgModule({\n  declarations: [DeliveriesComponent,DeliveriesPrintComponent, ConsViewComponent, RoundPipe],\n  imports: [\n    CommonModule,\n    OrdersRoutingModule,\n    MatAutocompleteModule,\n    FormModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatTableModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    FlexLayoutModule.withConfig({addFlexToParent: false}),\n    MatExpansionModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatSortModule,\n    DsuiteModule\n  ],\n  providers: [DatePipe],\n  entryComponents: [DeliveriesPrintComponent,ConsViewComponent]\n})\nexport class OrdersModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { UserService } from './user.service';\r\nimport { Product } from 'src/app/interfaces/product';\r\nimport { Rate } from 'src/app/interfaces/rate';\r\nimport { RateMapping } from '../interfaces/rateMapping';\r\nimport { Customer } from '../interfaces/customer';\r\nimport { DatePipe } from '@angular/common';\r\nimport { LoaderEnabled } from '../loader/loader.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n  products:Product[];\r\n  customers: Customer[];\r\n  product_rate:Rate[];\r\n  rate_type:RateMapping[];\r\n  discounts: any[];\r\n  constructor(private http: HttpClient,private userservice: UserService,private datePipe:DatePipe) {\r\n    console.log(\"service called\");\r\n    console.log(this.userservice);\r\n    //this.user = this.getMethod(environment.urls.getUser);\r\n    //fetch product details\r\n    this.getMethod(environment.urls.getProduct).subscribe((data:Product[]) => {\r\n      this.products = data;\r\n    });\r\n    // fetch rate \r\n    // this.getMethod(environment.urls.getRate).subscribe((data:Rate[]) => {\r\n    //   this.product_rate = data;\r\n    // });\r\n    this.getMethod(environment.urls.getRateList).subscribe((data:any[]) => {\r\n      this.product_rate = data;\r\n    });\r\n\r\n    //fetch customers\r\n    this.getMethod(environment.urls.getCustomer).subscribe((data:Customer[]) => {\r\n      this.customers = data;\r\n    });\r\n\r\n    //fetch discounts available now\r\n    let cur_date = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\r\n    let q = \"?isactive=YES&cur_date=\"+cur_date;\r\n    this.getMethod(environment.urls.discountList+q).subscribe((data:any[]) => {\r\n      console.log(data);\r\n      this.discounts = data;\r\n    });\r\n  }\r\n  \r\n  getProductList(){\r\n    return this.products;\r\n  }\r\n\r\n  getCustomerList(){\r\n    return this.customers;\r\n  }\r\n\r\n  getDiscountList(){\r\n    return this.discounts;\r\n  }\r\n\r\n  getSearchDiscountList(date:string):any{\r\n    let q = \"?isactive=YES&cur_date=\"+date;\r\n    return this.getMethod(environment.urls.discountList+q);\r\n  }\r\n\r\n  getProductPrice(prod_id:string,type:string): Rate{\r\n    let product = this.product_rate.filter((key:any) => key.product._id == prod_id);\r\n    //console.log(product);\r\n    return product.length > 0 ? product[0]['product']['rate_active'][type]:null;\r\n  }\r\n\r\n  @LoaderEnabled()\r\n  getMethod( url:string){\r\n    //let header = new HttpHeaders({ \"Authorization\": \"Bearer oooooososoos\"});\r\n    return this.http.get(url).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  @LoaderEnabled()\r\n  postMethod( url:string, data:any){    \r\n    data['createdBy'] = this.userservice.user._id;\r\n    //let header = new HttpHeaders({ \"Authorization\": \"Bearer oooooososoos\"});\r\n    return this.http.post(url,data).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  @LoaderEnabled()\r\n  putMethod( url:string, data:any){\r\n    data['updatedBy'] = this.userservice.user._id;\r\n    //let header = new HttpHeaders({ \"Authorization\": \"Bearer oooooososoos\"});\r\n    return this.http.put(url,data).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError('Something bad happened; please try again later..');\r\n  };\r\n\r\n}\r\n"],"sourceRoot":""}