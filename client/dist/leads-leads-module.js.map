{"version":3,"sources":["webpack:///./src/app/layout/leads/customers/customers-view.component.html","webpack:///./src/app/layout/leads/customers/customers-view.component.ts","webpack:///./src/app/layout/leads/customers/customers.component.html","webpack:///./src/app/layout/leads/customers/customers.component.scss","webpack:///./src/app/layout/leads/customers/customers.component.ts","webpack:///./src/app/layout/leads/customers/print-sheet.component.html","webpack:///./src/app/layout/leads/leads-routing.module.ts","webpack:///./src/app/layout/leads/leads.module.ts"],"names":[],"mappings":"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","file":"leads-leads-module.js","sourcesContent":["module.exports = \"<mat-card *ngIf=\\\"!invoiceView\\\">\\r\\n  <mat-card-title>{{leadName}}</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <table mat-table [dataSource]=\\\"transactions\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Date </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element._id.date}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <!-- Weight Column -->\\r\\n      <ng-container matColumnDef=\\\"amount\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span (click)=\\\"loadInvoice(element)\\\" [ngClass]=\\\"{'anchor-tag':element.debit}\\\">{{element.debit ? (element.debit | currency:'INR') : (element.credit | currency:'INR')}} <span [ngClass]=\\\"{'credit':element.credit,'debit':element.debit}\\\">{{element.debit?' dr':' cr'}}</span></span></td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <!-- Symbol Column -->\\r\\n      <!-- <ng-container matColumnDef=\\\"credit\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Credit </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.credit?element.credit:'-'}} </td>\\r\\n      </ng-container> -->\\r\\n    \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <!-- <p><a class=\\\"anchor-tag\\\" (click)=\\\"backToLeadPage()\\\">Back to Lead Page</a></p> -->\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"backToLeadPage()\\\">Back to Lead Page</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n<mat-card *ngIf=\\\"invoiceView\\\">\\r\\n  <div class=\\\"invoice\\\" *ngFor=\\\"let inv of invoiceData\\\">\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td><b>Bill No:</b> {{inv.sales.sale_id}}</td>\\r\\n            <td><b>Date:</b> {{inv.sales.sale_date | date:'medium':'IST'}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td><b>To:</b> {{inv.sales.customer.customerName}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td><b>Payment Type:</b> CASH</td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <table>\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>Sno</th>\\r\\n          <th>Description</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Rate</th>\\r\\n          <th>Tax</th>\\r\\n          <th scope=\\\"col\\\">Amount</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let desc of inv.details; let i = index\\\" class=\\\"center-align\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{desc.product.prod_name}}</td>\\r\\n          <td>{{desc.prod_quan | number : '1.2-2'}}</td>\\r\\n          <td>{{desc.prod_rate_per_unit|currency:'INR'}}</td>\\r\\n          <td>{{desc.prod_tax|currency:'INR'}}</td>\\r\\n          <td class=\\\"right-align\\\">{{desc.sub_amount|currency:'INR'}}</td>\\r\\n            </tr>\\r\\n          <tr>\\r\\n              <td colspan=\\\"5\\\" align=\\\"center\\\"><span class=\\\"span-text\\\">Discounts</span></td>\\r\\n              <td class=\\\"right-align\\\"><span class=\\\"span-text\\\">-{{getDiscountAmt(inv.sales.discount)|currency:'INR'}}</span></td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"inv.sales.roundOff\\\">\\r\\n            <td colspan=\\\"5\\\" align=\\\"center\\\"><span class=\\\"span-text\\\">Round Off</span></td>\\r\\n            <td class=\\\"right-align\\\"><span class=\\\"span-text\\\">{{inv.sales.roundOff.sym}}{{inv.sales.roundOff.val|currency:'INR'}}</span></td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n            <tr>\\r\\n                <th colspan=\\\"5\\\">Totals</th>\\r\\n                <td class='right-align'>{{inv.sales.total_amount|currency:'INR'}}</td>\\r\\n            </tr>\\r\\n        </tfoot>\\r\\n    </table>\\r\\n    </div>\\r\\n    <mat-card-actions>\\r\\n      <!-- <p></p><a class=\\\"anchor-tag\\\" (click)=\\\"backToTransaction()\\\">Back to Transaction</a></p> -->\\r\\n      <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"backToTransaction()\\\">Back to Transaction</button>\\r\\n    </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatTableDataSource } from '@angular/material';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { GenericResp } from 'src/app/interfaces/genericResp';\r\n\r\n@Component({\r\n    selector: 'app-customers-view',\r\n    templateUrl: './customers-view.component.html',\r\n    styleUrls: ['./customers.component.scss']\r\n})\r\nexport class CustomersViewComponent implements OnInit {\r\n\r\n    @Output() backToLead = new EventEmitter<boolean>();\r\n    @Input() data:any;\r\n    @Input() pageIndex:any;\r\n    displayedColumns = ['date', 'amount'];\r\n    transactions:MatTableDataSource<any>;\r\n    leadName:string;\r\n    invoiceData:any[];\r\n    invoiceView:boolean = false;\r\n\r\n    constructor(public commonService: CommonService){\r\n\r\n    }\r\n    ngOnInit(){\r\n        console.log(this.data);\r\n        this.leadName = this.data.customerName;\r\n        this.loadTransactions(this.data);        \r\n    }\r\n\r\n    loadTransactions(row:any){\r\n        this.commonService.getMethod(environment.urls.loadTransactions+'?customer_id='+row._id).subscribe((data:any) => {\r\n            // var temp = [];\r\n            // for (let row of data.data) {\r\n            //     if(!temp['customer'])\r\n            //         temp['customer'] = {};\r\n                \r\n            //     if(!temp['customer'][row._id.date])\r\n            //         temp['customer'][row._id.date] = {};                \r\n\r\n            //     if(!temp['customer'][row._id.date]['credit'])\r\n            //         temp['customer'][row._id.date]['credit'] = 0;\r\n\r\n            //     if(!temp['customer'][row._id.date]['debit'])\r\n            //         temp['customer'][row._id.date]['debit'] = 0;\r\n\r\n            //     if(row.credit){\r\n            //         temp['customer'][row._id.date]['credit'] += row.credit;\r\n            //     }else if(row.debit){\r\n            //         temp['customer'][row._id.date]['debit'] += row.debit;\r\n            //     }\r\n            // }\r\n            // console.log(temp);\r\n            this.transactions = new MatTableDataSource(data.data);\r\n        });\r\n    }\r\n\r\n    getDiscountAmt(row:any):number{\r\n        return row.reduce((acc,r)=> {\r\n          return acc+r.total_amount;\r\n        },0);\r\n    }\r\n\r\n    backToLeadPage(){\r\n        this.backToLead.emit(this.pageIndex);\r\n    }\r\n\r\n    backToTransaction(){\r\n        this.invoiceView = false;\r\n    }\r\n\r\n    loadInvoice(row:any){\r\n        if(row.debit){\r\n            this.invoiceView = true;\r\n            console.log(row);\r\n            let data = {\r\n                invoices: row.sale_ids,\r\n                type: 'SALES'\r\n            };\r\n            this.commonService.postMethod(environment.urls.printInvoices,data).subscribe((data:GenericResp)=>{\r\n            console.log(data);\r\n            if(data.code == 200)\r\n                this.invoiceData = data.data;\r\n            });\r\n        }\r\n    }\r\n}","module.exports = \"<mat-card *ngIf=\\\"showLeadsPage\\\">\\r\\n    <!-- <mat-card-header> -->\\r\\n        <mat-card-title>Leads <mat-icon (click)=\\\"callPrintModal()\\\" class=\\\"print-right\\\">print</mat-icon></mat-card-title>\\r\\n    <!-- </mat-card-header> -->\\r\\n    <mat-card-content>\\r\\n        <section class=\\\"example-section\\\" >\\r\\n            <mat-form-field class=\\\"example-margin\\\">\\r\\n                <input matInput name=\\\"searKey\\\" [(ngModel)]=\\\"searKey\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                <button mat-icon-button matSuffix (click)=\\\"clear()\\\">\\r\\n                    <mat-icon>{{searKey?'clear':''}}</mat-icon>\\r\\n                </button>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-margin\\\">\\r\\n                <mat-select name=\\\"selRoute\\\" [(ngModel)]=\\\"selRoute\\\" (selectionChange)=\\\"loadLeads()\\\" placeholder=\\\"Route\\\" >\\r\\n                    <mat-option *ngFor=\\\"let r of routes\\\" [value]=\\\"r.key\\\">{{r.value}}</mat-option>\\r\\n                </mat-select>\\r\\n                <!-- <mat-select placeholder=\\\"Route\\\" >\\r\\n                    <mat-option value=\\\"1\\\">Option 1</mat-option>\\r\\n                    <mat-option value=\\\"2\\\">Option 2</mat-option>\\r\\n                    <mat-option value=\\\"3\\\">Option 3</mat-option>\\r\\n                </mat-select> -->\\r\\n            </mat-form-field>\\r\\n        </section>\\r\\n    </mat-card-content>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <!-- Color Column -->\\r\\n        <ng-container matColumnDef=\\\"customerName\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Name </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.customerName\\\"> <a class=\\\"anchor-tag\\\" (click)=\\\"viewCustomerPage(row)\\\">{{row.customerName}}</a> </td>\\r\\n            </ng-container>\\r\\n\\r\\n        <!-- Progress Column -->\\r\\n        <ng-container matColumnDef=\\\"customer_id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Alias </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.customer_id}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name Column -->\\r\\n        <ng-container matColumnDef=\\\"route\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Route </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.routes[0].areaName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"totalAmount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{(row.debit + row.openingbalance) - row.credit | currency:'INR'}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> \\r\\n                <div class=\\\"icon-div\\\">\\r\\n                    <a (click)=\\\"openOrderModal(row)\\\"><mat-icon class=\\\"sidenav-icon\\\">add_shopping_cart</mat-icon></a>\\r\\n                    <a (click)=\\\"openPaymentModal(row)\\\"><mat-icon class=\\\"sidenav-icon\\\">attach_money</mat-icon></a>                \\r\\n                </div>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        \\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n</mat-card>\\r\\n<app-customers-view *ngIf=\\\"!showLeadsPage\\\" [pageIndex]=\\\"pageIndex\\\" [data]=\\\"rowData\\\" (backToLead)=\\\"resetLeadsPage($event)\\\"></app-customers-view>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\\n.icon-div {\\n  display: flex; }\\n\\n.icon-div a {\\n    padding-right: 0.5em;\\n    cursor: pointer; }\\n\\n.debit {\\n  color: red; }\\n\\n.credit {\\n  color: limegreen; }\\n\\n.anchor-tag {\\n  cursor: pointer; }\\n\\n.print-right {\\n  float: right;\\n  cursor: pointer; }\\n\\ntable tr.center-align {\\n  text-align: center; }\\n\\ntable td.right-align {\\n  text-align: right; }\\n\\n.span-text {\\n  font-style: italic;\\n  color: grey;\\n  font-size: smaller; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2xlYWRzL2N1c3RvbWVycy9DOlxcbG9jYWxkaXNrXFxteXdvcmtcXGRzdWl0ZVxcY2xpZW50L3NyY1xcYXBwXFxsYXlvdXRcXGxlYWRzXFxjdXN0b21lcnNcXGN1c3RvbWVycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVcsRUFDZDs7QUFFRDtFQUNJLGdCQUFlO0VBQ2YsWUFBVyxFQUNkOztBQUVEO0VBQ0ksY0FBYTtFQUNiLHNCQUFxQjtFQUNyQixvQkFBbUI7RUFDbkIsYUFBWSxFQUNmOztBQUVEO0VBQ0ksYUFBWSxFQUNmOztBQUVEO0VBQ0ksY0FBYSxFQUtoQjs7QUFORDtJQUdRLHFCQUFvQjtJQUNwQixnQkFBZSxFQUNsQjs7QUFHTDtFQUNJLFdBQVUsRUFDYjs7QUFFRDtFQUNJLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLGdCQUFlLEVBQ2xCOztBQUVEO0VBQ0ksYUFBYTtFQUNiLGdCQUFnQixFQUNuQjs7QUFFRDtFQUVRLG1CQUFrQixFQUNyQjs7QUFITDtFQUtRLGtCQUFpQixFQUNwQjs7QUFFTDtFQUNJLG1CQUFrQjtFQUNsQixZQUFXO0VBQ1gsbUJBQWtCLEVBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xlYWRzL2N1c3RvbWVycy9jdXN0b21lcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZXhhbXBsZS1zZWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiA2MHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1tYXJnaW4ge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4uaWNvbi1kaXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGEge1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDAuNWVtO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxufVxyXG5cclxuLmRlYml0IHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5jcmVkaXQge1xyXG4gICAgY29sb3I6IGxpbWVncmVlbjtcclxufVxyXG5cclxuLmFuY2hvci10YWd7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5wcmludC1yaWdodHtcclxuICAgIGZsb2F0IDogcmlnaHQ7XHJcbiAgICBjdXJzb3IgOiBwb2ludGVyO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICB0ci5jZW50ZXItYWxpZ24ge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgIHRkLnJpZ2h0LWFsaWduIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIH1cclxufVxyXG4uc3Bhbi10ZXh0IHtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGNvbG9yOiBncmV5O1xyXG4gICAgZm9udC1zaXplOiBzbWFsbGVyO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar } from '@angular/material';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Customer } from 'src/app/interfaces/customer';\r\nimport { Leads } from 'src/app/interfaces/leads';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ProdtableComponent } from '../../common/prodtable/prodtable.component';\r\nimport { PaymentsComponent } from '../../payment/payments/payments.component';\r\nimport { BootstrapService } from 'src/app/services/bootstrap.service';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { PrinterService } from 'src/app/services/printer.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.scss']\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  displayedColumns = ['customerName', 'customer_id', 'route','totalAmount','actions'];\r\n  dataSource: MatTableDataSource<Customer>;\r\n\r\n  public customerList: Customer[];\r\n  showLeadsPage:boolean = true;\r\n  rowData:any;\r\n  routes:any;\r\n  selRoute: string = \"all\";\r\n  searKey:string = \"\";\r\n  pageIndex:any = 0;\r\n  // tempIndex:any = 0;\r\n  \r\n  @ViewChild(MatPaginator) set matPaginator(paginator: MatPaginator) {\r\n    // console.log('paginator called');\r\n    if(paginator){\r\n      if(this.pageIndex != 0){\r\n        paginator.pageIndex = this.pageIndex;\r\n        this.pageIndex = 0;\r\n      }\r\n      this.dataSource.paginator = paginator;\r\n    }\r\n  }\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private commonService: CommonService, private dialog: MatDialog, private printerService:PrinterService,\r\n    private datePipe: DatePipe, private router: Router, private bootstrap:BootstrapService) {\r\n    //this.customerList = [];\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   console.log('after all');\r\n  // }\r\n\r\n  ngOnInit() {\r\n    this.loadLeads();\r\n    //this.paginator.pageIndex = 1;\r\n    // this.commonService.getMethod('http://localhost:3000/api/test/productList').subscribe((data:any)=>{\r\n    //   console.log(data);\r\n\r\n      \r\n    // });\r\n    this.routes = this.bootstrap.routes.map(function(val) {\r\n      return {\r\n        key:val._id,\r\n        value:val.areaName\r\n      }\r\n    });\r\n    this.routes.push({key:'all',value:'All'});\r\n  }\r\n\r\n  private loadLeads(){\r\n    this.commonService.getMethod(environment.urls.getLeads+\"?route=\"+this.selRoute).subscribe((data: Leads[]) => {\r\n      this.customerList = data;\r\n      this.dataSource = new MatTableDataSource(this.customerList);\r\n      //this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n      filterValue = filterValue.trim(); // Remove whitespace\r\n      filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n      this.dataSource.filter = filterValue;\r\n      if (this.dataSource.paginator) {\r\n          this.dataSource.paginator.firstPage();\r\n      }\r\n  }\r\n\r\n  openOrderModal(customer:Leads){\r\n    console.log(customer);\r\n    const dialogRef = this.dialog.open(ProdtableComponent, {\r\n      width: '90%',\r\n      height:'80%',\r\n      data: {customer:customer,url:environment.urls.postOrder,source:'leads'},\r\n      panelClass: 'custom-modalbox'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      //reload\r\n    });\r\n  }\r\n\r\n  openPaymentModal(customer:Leads){\r\n    //console.log(customer);\r\n    const dialogRef = this.dialog.open(PaymentsComponent, {\r\n      width: 'auto',\r\n      height:'auto',\r\n      data: {customer:customer,source:'leads'},\r\n      panelClass: 'custom-modalbox'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.loadLeads();\r\n    });\r\n  }\r\n\r\n  viewCustomerPage(row){\r\n    //console.log(this.dataSource.paginator);\r\n    this.showLeadsPage = false;\r\n    this.pageIndex = this.dataSource.paginator.pageIndex;\r\n    this.rowData = row;\r\n  }\r\n\r\n  resetLeadsPage(e){\r\n    //console.log('reset called'+e);\r\n    //this.paginator.pageIndex = e;\r\n    this.pageIndex = e;\r\n    this.showLeadsPage = true;\r\n    //console.log(this.paginatorR);\r\n    //this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  callPrintModal(){\r\n    console.log('printer called');\r\n    const dialogRef = this.dialog.open(SheetPrintComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {    \r\n      let data = {};  \r\n      var q = result.data.map(function(obj){\r\n        return obj.key;\r\n      }).join(\",\");\r\n      var route_name = result.data.map(function(obj){\r\n        return obj.value;\r\n      }).join(\",\");\r\n      let cur_date = new Date();\r\n      let query = '?sale_date='+this.datePipe.transform(cur_date,\"yyyy-MM-dd\")+\"&route=\"+q;\r\n      let sales_report = this.commonService.getMethod(environment.urls.salesReport+query);  //order details\r\n      let lead_report = this.commonService.getMethod(environment.urls.leadReport); //account details with tdy,week,old\r\n      forkJoin([sales_report, lead_report]).subscribe(results => {        \r\n        data = {\r\n          'route': route_name,\r\n          'sales':results[0],\r\n          'account':results[1]\r\n        }\r\n        this.printerService.printData = {\r\n          redirectUrl: '/leads',\r\n          format: 'report',\r\n          data: data,\r\n          type: 'LEADS',\r\n          date: cur_date\r\n        }\r\n        this.router.navigate(['/layout',{ outlets: { printpage: 'printview' }}],{ skipLocationChange: true });\r\n      });\r\n    });\r\n  }\r\n\r\n  clear():void{\r\n    this.searKey = '';\r\n    this.applyFilter('');\r\n    //this.addEvent();\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'print-sheet',\r\n  templateUrl: './print-sheet.component.html',\r\n  styleUrls: ['./customers.component.scss']\r\n})\r\nexport class SheetPrintComponent implements OnInit {\r\n  routes: any[];\r\n  masterCheck: boolean = false;\r\n  constructor(public bootstrap:BootstrapService, public snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<SheetPrintComponent>){}\r\n  ngOnInit(){\r\n    this.routes = this.bootstrap.routes.map(function(val) {\r\n      return {\r\n        checked: false,\r\n        key:val._id,\r\n        value:val.areaName\r\n      }\r\n    });\r\n  }\r\n\r\n  isAllSelected(){\r\n    this.masterCheck = this.routes.every(function(item:any) {\r\n      return item.checked == true;\r\n    })\r\n  }\r\n\r\n  checkUncheckAll(){\r\n    this.routes.forEach(obj => {\r\n      obj.checked = this.masterCheck;\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  print(){\r\n    var selectedList = this.routes.filter(function(obj){\r\n      return obj.checked == true;\r\n    });\r\n    this.dialogRef.close({ data: selectedList });\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n      <h2 class=\\\"example-h2\\\">Please select the route</h2>\\r\\n    \\r\\n      <section class=\\\"\\\">\\r\\n        <mat-checkbox class=\\\"example-margin\\\" value=\\\"all\\\" (change)=\\\"checkUncheckAll()\\\" [(ngModel)]=\\\"masterCheck\\\">All</mat-checkbox>\\r\\n      </section>\\r\\n      <section class=\\\"\\\" *ngFor=\\\"let route of routes\\\">\\r\\n        <mat-checkbox class=\\\"example-margin\\\" [value]=\\\"route.key\\\" (change)=\\\"isAllSelected()\\\" [(ngModel)]=\\\"route.checked\\\">{{route.value}}</mat-checkbox>\\r\\n      </section>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n        <button mat-button (click)=\\\"print()\\\">PRINT</button>\\r\\n        <button mat-button (click)=\\\"onNoClick()\\\">CANCEL</button>\\r\\n      </mat-card-actions>\\r\\n</mat-card>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CustomersComponent } from './customers/customers.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'customers'\r\n  },\r\n  {\r\n      path: 'customers',\r\n      component: CustomersComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LeadsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DsuiteModule } from '../common/dsuite.module';\r\nimport { PaymentModule } from '../payment/payment.module';\r\n\r\nimport { LeadsRoutingModule } from './leads-routing.module';\r\nimport { CustomersComponent, SheetPrintComponent } from './customers/customers.component';\r\nimport { CustomersViewComponent } from './customers/customers-view.component';\r\n\r\n\r\nimport { MatTableModule, MatButtonModule } from '@angular/material';\r\nimport {\r\n  MatPaginatorModule, MatAutocompleteModule, MatCardModule, MatCheckboxModule, MatDatepickerModule,\r\n  MatFormFieldModule, MatInputModule, MatNativeDateModule, MatRadioModule, MatSelectModule,\r\n  MatSliderModule, MatSlideToggleModule, MatIconModule\r\n} from '@angular/material';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [CustomersComponent, CustomersViewComponent, SheetPrintComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    LeadsRoutingModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    DsuiteModule,\r\n    PaymentModule,\r\n    MatButtonModule\r\n  ],\r\n  entryComponents: [SheetPrintComponent]\r\n})\r\nexport class LeadsModule { }\r\n"],"sourceRoot":""}