{"version":3,"sources":["webpack:///./src/app/layout/grade-mgmt/grade-mgmt-routing.module.ts","webpack:///./src/app/layout/grade-mgmt/grade-mgmt.module.ts","webpack:///./src/app/layout/grade-mgmt/management/management.component.html","webpack:///./src/app/layout/grade-mgmt/management/management.component.scss","webpack:///./src/app/layout/grade-mgmt/management/management.component.ts","webpack:///./src/app/layout/grade-mgmt/transactions/transactions.component.html","webpack:///./src/app/layout/grade-mgmt/transactions/transactions.component.scss","webpack:///./src/app/layout/grade-mgmt/transactions/transactions.component.ts","webpack:///./src/app/services/printer.service.ts"],"names":[],"mappings":"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","file":"grade-mgmt-grade-mgmt-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagementComponent } from './management/management.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch:'prefix',\n    redirectTo: 'deliveries'\n  },\n  {\n    path: 'management',\n    component: ManagementComponent\n  },\n  {\n    path: 'transaction',\n    component: TransactionsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GradeMgmtRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GradeMgmtRoutingModule } from './grade-mgmt-routing.module';\nimport { ManagementComponent } from './management/management.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { AppMaterialModule } from 'src/app/app-material/app-material.module';\nimport { FormsModule  } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [ManagementComponent, TransactionsComponent],\n  imports: [\n    CommonModule,\n    GradeMgmtRoutingModule,\n    AppMaterialModule,\n    FormsModule,\n    FlexLayoutModule.withConfig({addFlexToParent: false}),\n  ]\n})\nexport class GradeMgmtModule { }\n","module.exports = \"<mat-card>\\n  <mat-card-header>\\n      <mat-card-title>Grade Management</mat-card-title>\\n  </mat-card-header>\\n  <!-- <mat-card-content>\\n      <section class=\\\"example-section\\\">\\n          <mat-form-field class=\\\"example-margin\\\">\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n          </mat-form-field>\\n      </section>\\n  </mat-card-content> -->\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"sno\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Sno </th>\\n        <td mat-cell *matCellDef=\\\"let row; let i=index\\\" > {{i+1}} </td>\\n        <td mat-footer-cell *matFooterCellDef>  </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"emptyName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Grade Type </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" > {{row.emptyName}} </td>\\n        <td mat-footer-cell *matFooterCellDef [attr.rowspan]=\\\"2\\\"> <strong> GRAND TOTAL</strong> </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"count\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" > {{row.count}} </td>\\n        <td mat-footer-cell *matFooterCellDef> <strong>{{getTotalQuan()}}</strong> </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"entryType\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Transaction Type </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" > {{row.entryType}} </td>\\n        <td mat-footer-cell *matFooterCellDef>  </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"createdAt\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" > {{row.createdAt | date}} </td>\\n        <td mat-footer-cell *matFooterCellDef>  </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" > <p class=\\\"display-inline\\\">\\n          <mat-icon class=\\\"print\\\" (click)=\\\"editGrade(row)\\\">edit</mat-icon>\\n          <mat-icon class=\\\"print\\\" (click)=\\\"deleteEntry(row)\\\">delete</mat-icon>\\n          </p> </td>\\n        <td mat-footer-cell *matFooterCellDef>  </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\n  </table>\\n\\n  <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n  <div class=\\\"clearpix\\\"> \\n    <button mat-raised-button color =\\\"primary\\\" (click)=\\\"newEntry()\\\">Add New</button>\\n  </div>\\n</mat-card>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\\n.clearpix {\\n  margin-top: 10px; }\\n\\n.display-inline {\\n  display: inline-flex; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2dyYWRlLW1nbXQvbWFuYWdlbWVudC9DOlxcbG9jYWxkaXNrXFxteXdvcmtcXGRzdWl0ZVxcY2xpZW50L3NyY1xcYXBwXFxsYXlvdXRcXGdyYWRlLW1nbXRcXG1hbmFnZW1lbnRcXG1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXLEVBQ2Q7O0FBRUQ7RUFDSSxnQkFBZTtFQUNmLFlBQVcsRUFDZDs7QUFPRDtFQUNJLGNBQWE7RUFDYixzQkFBcUI7RUFDckIsb0JBQW1CO0VBQ25CLGFBQVksRUFDZjs7QUFFRDtFQUNJLGFBQVksRUFDZjs7QUFFRDtFQUNJLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLHFCQUFvQixFQUN2QiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9ncmFkZS1tZ210L21hbmFnZW1lbnQvbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRkLFxyXG50aCB7XHJcbiAgICAvL3dpZHRoOiAyNSU7XHJcbn1cclxuXHJcbi5leGFtcGxlLXNlY3Rpb24ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLW1hcmdpbiB7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5jbGVhcnBpeCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4uZGlzcGxheS1pbmxpbmV7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'src/app/services/common.service';\nimport { environment } from 'src/environments/environment';\nimport { GenericResp } from 'src/app/interfaces/genericResp';\nimport { GradeMngt } from 'src/app/interfaces/grade-mngt';\nimport { CommonModalComponent } from 'src/app/app-material/common-modal/common-modal.component';\nimport { ConfirmPopComponent } from 'src/app/app-material/confirm-pop/confirm-pop.component';\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.component.html',\n  styleUrls: ['./management.component.scss']\n})\nexport class ManagementComponent implements OnInit {\n  displayedColumns = ['sno','emptyName','entryType','createdAt','count','actions'];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  gradeList: GradeMngt[];\n  newGradeEntry: any[];\n  confirmBox: string = \"YES\";\n  constructor(public commonService: CommonService, public dialog:MatDialog, public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.loadGradeList();\n    this.loadVariables();\n  }\n\n  loadGradeList(){\n    this.commonService.getMethod(environment.urls.getGradeMngtList).subscribe((data:GenericResp) => {\n      if(data.code == 200){\n        this.gradeList = data.data;\n        this.dataSource = new MatTableDataSource(this.gradeList);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }      \n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editGrade(row:any):void {    \n    this.newGradeEntry.map(inp => {\n      inp.value = row[inp.name];\n    });\n    this.newGradeEntry.push({\n      \"order\": 0,\n      \"type\": \"input\",\n      \"inputType\": \"hidden\",\n      \"name\": \"_id\",\n      \"value\": row._id,\n      \"placeholder\": \"_ID\",\n        \"validation\": {\n          \"required\": true\n        }\n    });\n    const dialogRef = this.dialog.open(CommonModalComponent, {\n      //width: '300px',\n      data: {formData:this.newGradeEntry.sort((a, b) => a.order - b.order),formTitle:\"Edit\",url:environment.urls.gradeUpdate,method:'PUT' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadGradeList();   \n      this.loadVariables(); // refreh the variables\n    });\n  }\n\n  newEntry():void {\n    const dialogRef = this.dialog.open(CommonModalComponent, {\n      //width: '300px',\n      data: {formData:this.newGradeEntry.sort((a, b) => a.order - b.order),formTitle:\"Adding Grades\",url:environment.urls.saveGradeMngt }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadGradeList();   \n    });\n  }\n\n  deleteEntry(row:any): void {\n    console.log(row);\n      const dialogRef = this.dialog.open(ConfirmPopComponent, {\n        width: '250px',\n        data: {confirm:this.confirmBox}\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n        if(result && result == 'YES'){\n          row.is_delete = 'YES';\n          this.commonService.putMethod(environment.urls.gradeUpdate+'/'+row._id,row).subscribe((data:GenericResp)=>{\n            if(data.code == 200){\n              this.snackBar.open(data.message, \"Success\", {\n                duration: 500,\n              });\n              this.loadGradeList();\n            }else{\n              this.snackBar.open(data.message, \"Error\", {\n                duration: 500,\n              });\n            }\n          });\n        }\n      });\n  }\n\n  getTotalQuan():number{\n    return this.gradeList.reduce((acc,list) => (acc + list.count), 0);\n  }\n\n  loadVariables(){\n    this.newGradeEntry = [{\n      \"order\":1,\n      \"type\": \"input\",\n      \"inputType\": \"text\",\n      \"name\": \"emptyName\",\n      \"value\":\"\",\n      \"placeholder\": \"Grade Type Name\",\n      \"validation\": {\n        \"required\": true\n      }\n    },{\n      \"order\":2,\n      \"type\": \"input\",\n      \"inputType\": \"number\",\n      \"name\": \"count\",\n      \"value\":\"\",\n      \"placeholder\": \"Quantity\",\n      \"validation\": {\n        \"required\": true\n      }\n    },{\n      \"order\":3,\n      \"type\": \"select\",\n      \"inputType\": \"dropdown\",\n      \"name\": \"entryType\",\n      \"value\":\"\",\n      \"placeholder\": \"Entry Type\",\n      \"validation\": {\n        \"required\": true\n      },\n      options:[\n        {\"key\": \"IN\",\n        \"value\": \"IN\"},\n        {\"key\": \"OUT\",\n        \"value\": \"OUT\"}\n      ]\n    },{\n      \"order\":4,\n      \"type\": \"textarea\",\n      \"inputType\": \"text\",\n      \"name\": \"description\",\n      \"value\":\"\",\n      \"placeholder\": \"Description\",\n      \"validation\": {\n        \"required\": true\n      }\n    },{\n      \"order\":5,\n      \"type\": \"select\",\n      \"inputType\": \"dropdown\",\n      \"name\": \"is_active\",\n      \"value\":\"\",\n      \"placeholder\": \"Is Active\",\n      \"validation\": {\n        \"required\": true\n      },\n      options:[\n        {\"key\": \"YES\",\n        \"value\": \"YES\"},\n        {\"key\": \"NO\",\n        \"value\": \"NO\"}\n      ]\n    }];\n  }\n\n}\n","module.exports = \"<form>\\n  <mat-card>\\n    <mat-card-title>\\n      Grade Transactions      \\n      <mat-icon title=\\\"Consolidated view\\\" (click)=\\\"showConsolidated()\\\" class=\\\"print-right\\\">assessment</mat-icon>\\n    </mat-card-title>\\n    <mat-card-content>\\n      <section class=\\\"example-section\\\" [ngClass]=\\\"{'toggle':enableSearch}\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex fxLayoutGap=\\\"20px\\\">\\n        <span class=\\\"no-margin\\\"><mat-icon (click)=\\\"enableSearch = !enableSearch\\\">search</mat-icon></span>\\n        <mat-form-field fxFlex class=\\\"\\\">\\n            <input matInput name=\\\"searKey\\\" [(ngModel)]=\\\"searKey\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n            <button mat-icon-button matSuffix (click)=\\\"clear()\\\">\\n              <mat-icon>{{searKey?'clear':''}}</mat-icon>\\n              </button>\\n        </mat-form-field>\\n        <mat-form-field fxFlex class=\\\"\\\">\\n            <mat-select name=\\\"selRoute\\\" [(ngModel)]=\\\"selRoute\\\" (selectionChange)=\\\"addEvent()\\\" placeholder=\\\"Route\\\" >\\n                <mat-option *ngFor=\\\"let r of routes\\\" [value]=\\\"r.key\\\">{{r.value}}</mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlex class=\\\"\\\">\\n          <input matInput disabled [max]=\\\"maxToDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"delDate\\\" (dateInput)=\\\"addEvent()\\\" [(ngModel)]=\\\"delDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker disabled=\\\"false\\\" #picker></mat-datepicker>\\n        </mat-form-field>\\n    </section> \\n    \\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- Color Column -->\\n        <ng-container matColumnDef=\\\"sno\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Sno </th>\\n          <td mat-cell *matCellDef=\\\"let row; let i=index\\\" > {{i+1}} </td>\\n          <td mat-footer-cell *matFooterCellDef>  </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"customer\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" > {{row.customer[0].customer_id}}-{{row.customer[0].customer_name}} </td>\\n          <td mat-footer-cell *matFooterCellDef [attr.rowspan]=\\\"2\\\"> <strong> TOTAL</strong> </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"balance\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Balance </th>\\n          <td mat-cell *matCellDef=\\\"let row; let i=index\\\" >\\n            {{row.t_deliver - row.t_receive}}\\n            <!-- <mat-form-field class=\\\"input-number\\\">\\n              <input matInput type=\\\"number\\\" name=\\\"balance{{i}}\\\" [(ngModel)]=\\\"row.balance.count\\\" size=\\\"10\\\"/>\\n            </mat-form-field> -->\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef> <strong>{{getTotal('balance')}}</strong> </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"delivered\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivered </th>\\n          <td mat-cell *matCellDef=\\\"let row; let i=index\\\" >\\n            <mat-form-field class=\\\"input-number\\\">\\n              <input matInput type=\\\"number\\\" tabindex=\\\"{{i+1}}\\\" name=\\\"deliver{{i}}\\\" [(ngModel)]=\\\"row.c_deliver\\\" size=\\\"10\\\" (click)=\\\"$event.target.select()\\\"/>\\n            </mat-form-field>\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef> <strong>{{getTotal('deliver')}}</strong> </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"received\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Received </th>\\n          <td mat-cell *matCellDef=\\\"let row; let i=index\\\" >\\n            <mat-form-field class=\\\"input-number\\\">\\n              <input matInput type=\\\"number\\\" tabindex=\\\"{{i+1+dataSource.data.length}}\\\" name=\\\"receive{{i}}\\\" [(ngModel)]=\\\"row.c_receive\\\" size=\\\"10\\\" (click)=\\\"$event.target.select()\\\"/>\\n            </mat-form-field>\\n          </td>\\n          <td mat-footer-cell *matFooterCellDef> <strong>{{getTotal('receive')}}</strong> </td>\\n        </ng-container>\\n\\n        <!-- <ng-container matColumnDef=\\\"actions\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" > <p class=\\\"display-inline\\\">\\n            <mat-icon class=\\\"print\\\" (click)=\\\"editGrade(row)\\\">edit</mat-icon>\\n            <mat-icon class=\\\"print\\\" (click)=\\\"deleteEntry(row)\\\">delete</mat-icon>\\n            </p> </td>\\n          <td mat-footer-cell *matFooterCellDef>  </td>\\n        </ng-container> -->\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\n    </table>\\n\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n    </div>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onsubmit()\\\">Submit</button>\\n  </mat-card-content>\\n</mat-card>\\n</form>\"","module.exports = \".print-right {\\n  float: right;\\n  cursor: pointer; }\\n\\n.example-section {\\n  align-content: center;\\n  align-items: center;\\n  background-color: #E8F1FF;\\n  padding: 10px 15px;\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  margin-bottom: 8px; }\\n\\n.cus-title {\\n  font-size: 0.6em;\\n  color: grey; }\\n\\n.cus-title ::before {\\n    content: \\\"\\\\a\\\";\\n    white-space: pre; }\\n\\n.visible-md {\\n  display: none; }\\n\\n.no-margin {\\n  margin-bottom: 0 !important; }\\n\\n@media screen and (max-width: 992px) {\\n  .visible-md {\\n    display: block; }\\n  .toggle .mat-form-field {\\n    display: none; } }\\n\\n.input-number {\\n  width: 50px; }\\n\\ntable {\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2dyYWRlLW1nbXQvdHJhbnNhY3Rpb25zL0M6XFxsb2NhbGRpc2tcXG15d29ya1xcZHN1aXRlXFxjbGllbnQvc3JjXFxhcHBcXGxheW91dFxcZ3JhZGUtbWdtdFxcdHJhbnNhY3Rpb25zXFx0cmFuc2FjdGlvbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCLEVBQ2pCOztBQUVEO0VBRUUsc0JBQXFCO0VBQ3JCLG9CQUFtQjtFQUVuQiwwQkFBeUI7RUFDekIsbUJBQWtCO0VBQ2xCLGdIQUFtRztFQUNuRyxtQkFBa0IsRUFDbkI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsWUFBVyxFQUtaOztBQVBEO0lBSUUsY0FBYTtJQUNiLGlCQUFnQixFQUNmOztBQUdIO0VBQ0UsY0FBYSxFQUNkOztBQUVEO0VBQ0UsNEJBQTRCLEVBQzdCOztBQUVEO0VBQ0U7SUFDSSxlQUFjLEVBQ2pCO0VBRUQ7SUFFSSxjQUFZLEVBQ2IsRUFBQTs7QUFJTDtFQUNFLFlBQVcsRUFDWjs7QUFJRDtFQUNFLFlBQVcsRUFDWjs7QUFFRDs7RUFFSSxXQUFVLEVBQ2IiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvZ3JhZGUtbWdtdC90cmFuc2FjdGlvbnMvdHJhbnNhY3Rpb25zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByaW50LXJpZ2h0e1xyXG4gIGZsb2F0IDogcmlnaHQ7XHJcbiAgY3Vyc29yIDogcG9pbnRlcjtcclxufVxyXG5cclxuLmV4YW1wbGUtc2VjdGlvbiB7XHJcbiAgLy9kaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIC8vIGhlaWdodDogNjBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRThGMUZGO1xyXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICBib3gtc2hhZG93OiAwIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLC4yKSwgMCAycHggMnB4IDAgcmdiYSgwLDAsMCwuMTQpLCAwIDFweCA1cHggMCByZ2JhKDAsMCwwLC4xMik7XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG59XHJcblxyXG4uY3VzLXRpdGxle1xyXG4gIGZvbnQtc2l6ZTogMC42ZW07XHJcbiAgY29sb3I6IGdyZXk7XHJcbiAgOjpiZWZvcmV7XHJcbiAgY29udGVudDogXCJcXGFcIjtcclxuICB3aGl0ZS1zcGFjZTogcHJlOyAgXHJcbiAgfVxyXG59XHJcblxyXG4udmlzaWJsZS1tZCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLm5vLW1hcmdpbntcclxuICBtYXJnaW4tYm90dG9tIDogMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xyXG4gIC52aXNpYmxlLW1kIHtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG5cclxuICAudG9nZ2xlIHtcclxuICAgIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICAgIGRpc3BsYXk6bm9uZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5pbnB1dC1udW1iZXIge1xyXG4gIHdpZHRoOiA1MHB4O1xyXG59XHJcblxyXG4vLyB0YWJsZSBjc3NcclxuXHJcbnRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxudGQsXHJcbnRoIHtcclxuICAgIHdpZHRoOiAyNSU7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { CommonService } from 'src/app/services/common.service';\nimport { MatDialog, MatSnackBar, MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { PrinterService } from 'src/app/services/printer.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { BootstrapService } from 'src/app/services/bootstrap.service';\nimport { environment } from 'src/environments/environment';\nimport { GenericResp } from 'src/app/interfaces/genericResp';\nimport { CustomerGradeTrans, GradeTrans } from 'src/app/interfaces/grade-mngt';\nimport { ConfirmPopComponent } from 'src/app/app-material/confirm-pop/confirm-pop.component';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.scss']\n})\n\nexport class TransactionsComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  displayedColumns = ['sno','customer','balance','delivered','received'];\n  dataSource: MatTableDataSource<any>;\n  \n  enableSearch:boolean = false;\n  routes:any;\n  customerGradeList:any[];\n  delDate: Date;\n  maxToDate: Date;\n  selRoute: string = \"all\";\n  searKey: string = \"\";\n  confirmBox: string = \"YES\";\n\n  constructor(private datePipe: DatePipe, private commonService: CommonService, private dialog: MatDialog, private bootstrap:BootstrapService,\n    private printerService: PrinterService, private router: Router, private userservice: UserService, private snackBar:MatSnackBar) { }\n\n  ngOnInit() {\n    this.delDate = new Date();\n    this.routes = this.bootstrap.routes.map(function(val) {\n      return {\n        key:val._id,\n        value:val.areaName\n      }\n    });\n    this.routes.push({key:'all',value:'All'});\n    this.addEvent();\n    let tdy = new Date();\n    //tdy.setDate(tdy.getDate() +1);\n    this.maxToDate = tdy;\n  }\n\n  showConsolidated(){\n    console.log('assessment');\n  }\n\n  public addEvent(){\n    let q = '?q_date='+this.datePipe.transform(this.delDate,\"yyyy-MM-dd\")+\"&route=\"+this.selRoute+\"&search_key=\"+this.searKey;\n    this.loadGradeList(q);\n  }\n\n  private loadGradeList(query:string){    \n    this.commonService.getMethod(environment.urls.getGradeTransList+query).subscribe((data:GenericResp)=>{\n      if(data.code == 200){\n        if(data.data)\n          this.customerGradeList = data.data.sort((a, b) => (a.customer[0].index > b.customer[0].index) ? 1 : (a.customer[0].index === b.customer[0].index) ? ((a.size > b.size) ? 1 : -1) : -1 );\n\n        // this.customerGradeList.map(t => {\n        //   let temp:GradeTrans = {\n        //     customer_id:\"\",\n        //     count:0,\n        //     transaction:\"\",\n        //     description:\"\"\n        //   }\n        //   let temp1:GradeTrans = {\n        //     customer_id:\"\",\n        //     count:0,\n        //     transaction:\"\",\n        //     description:\"\"\n        //   }\n        //   if(!t.delivered)\n        //     t.delivered = temp;\n        //   if(!t.received)\n        //     t.received = temp1;\n        // });\n        //console.log(this.customerGradeList);\n        this.dataSource = new MatTableDataSource(this.customerGradeList);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.dataSource.filterPredicate = (data, filter: string)  => {\n          const accumulator = (currentTerm, key) => {\n            return key === 'customer' ? currentTerm + data.customer[0].customer_name : currentTerm + data[key];\n          };\n          const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\n          // Transform the filter by converting it to lowercase and removing whitespace.\n          const transformedFilter = filter.trim().toLowerCase();\n          return dataStr.indexOf(transformedFilter) !== -1;\n        };\n      }else{\n        this.snackBar.open(data.message, \"Error\", {\n          duration: 500,\n        });\n      }\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n    }\n  }\n\n  onsubmit(){    \n    //console.log(this.customerGradeList);\n    //return false;\n    let current_date = this.datePipe.transform(this.delDate,\"yyyy-MM-dd\");\n    let live_date = this.datePipe.transform(new Date(),\"yyyy-MM-dd\");\n    if(current_date != live_date){\n      const dialogRef = this.dialog.open(ConfirmPopComponent, {\n        width: '250px',\n        data: {confirm:this.confirmBox,label:'You are making changes for previous days. Sure want to continue?'}\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n        if(result && result == 'YES'){\n          this.transApiSubmit();\n        }\n      });\n    } else {\n      this.transApiSubmit();\n    }  \n    \n  }\n\n  transApiSubmit(){\n    let temp:GradeTrans[] = [];\n    let current_date = this.datePipe.transform(this.delDate,\"yyyy-MM-dd\");\n    this.customerGradeList.forEach(list => {\n      if(list.c_deliver){\n        let del = {\n          'customer_id':list.customer[0].customer_id,\n          'count':list.c_deliver?list.c_deliver:0,\n          'transaction':'OUT',\n          'description':'',\n          't_date': current_date\n        }\n        temp.push(del);\n        //console.log(t);\n      }\n      if(list.c_receive){\n        let rec = {\n          'customer_id':list.customer[0].customer_id,\n          'count':list.c_receive?list.c_receive:0,\n          'transaction':'IN',\n          'description':'',\n          't_date': current_date\n        }\n        temp.push(rec);\n        //console.log(t1);\n      }\n    });\n    \n    let data = {'trans':temp};\n    this.commonService.postMethod(environment.urls.saveGradeTrans,data).subscribe((data:GenericResp) => {\n      if(data.code == 200){\n        this.snackBar.open(data.message, \"Success\", {\n          duration: 500,\n        });\n      }else{\n        this.snackBar.open(data.message, \"Error\", {\n          duration: 500,\n        });\n      }\n      //refresh\n      this.addEvent();\n    });\n  }\n\n  getTotal(inp:string){\n    //debugger;\n    switch(inp){\n      case 'balance':\n        if(this.customerGradeList && this.customerGradeList.length > 0){\n          return this.customerGradeList.reduce((acc,list) => (acc+list.t_deliver),0) - this.customerGradeList.reduce((acc,list) => (acc+list.t_receive),0);\n        } else {\n          return 0;\n        }\n        break;\n      case 'deliver':\n        if(this.customerGradeList && this.customerGradeList.length > 0){\n          return this.customerGradeList.reduce((acc,list) => (acc+list.c_deliver),0);\n        } else {\n          return 0;\n        }\n        break;\n      case 'receive':\n        if(this.customerGradeList && this.customerGradeList.length > 0){\n          return this.customerGradeList.reduce((acc,list) => (acc+list.c_receive),0);\n        }else{\n          return 0;\n        }\n        break;\n    }\n  }\n\n  clear():void{\n    this.searKey = '';\n    this.applyFilter('');\n    //this.addEvent();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Printer } from '../interfaces/printer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrinterService {\n  printData: Printer;\n  constructor() { }\n}\n"],"sourceRoot":""}