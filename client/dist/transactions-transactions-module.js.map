{"version":3,"sources":["webpack:///./src/app/layout/transactions/damages/damages.component.html","webpack:///./src/app/layout/transactions/damages/damages.component.scss","webpack:///./src/app/layout/transactions/damages/damages.component.ts","webpack:///./src/app/layout/transactions/expenses/expenses.component.html","webpack:///./src/app/layout/transactions/expenses/expenses.component.scss","webpack:///./src/app/layout/transactions/expenses/expenses.component.ts","webpack:///./src/app/layout/transactions/openingbalance/openingbalance.component.html","webpack:///./src/app/layout/transactions/openingbalance/openingbalance.component.scss","webpack:///./src/app/layout/transactions/openingbalance/openingbalance.component.ts","webpack:///./src/app/layout/transactions/purchase/purchase.component.html","webpack:///./src/app/layout/transactions/purchase/purchase.component.scss","webpack:///./src/app/layout/transactions/purchase/purchase.component.ts","webpack:///./src/app/layout/transactions/transactions-routing.module.ts","webpack:///./src/app/layout/transactions/transactions.module.ts"],"names":[],"mappings":"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","file":"transactions-transactions-module.js","sourcesContent":["module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n      <mat-card-title class=\\\"invoice-title\\\">Returns / Spoilages</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>      \\r\\n        <form [formGroup]=\\\"custForm\\\" >\\r\\n          <section class=\\\"example-section\\\">\\r\\n              <mat-form-field class=\\\"example-margin customer-col\\\">\\r\\n                  <input type=\\\"text\\\" autofocus placeholder=\\\"Customer Name\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"customerName\\\" [matAutocomplete]=\\\"customer\\\">\\r\\n                  <mat-autocomplete autoActiveFirstOption (optionSelected)='loadCustomerRateType($event.option.value)' #customer=\\\"matAutocomplete\\\" [displayWith]=\\\"displayCustomerFn\\\">\\r\\n                    <mat-option *ngFor=\\\"let customer of customerFilteredOptions | async\\\"  [value]=\\\"customer\\\">\\r\\n                      {{customer.customerName}}-{{customer.routes.areaName}}-{{customer.customer_id|slice:-3}}\\r\\n                    </mat-option>\\r\\n                  </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"example-margin date-col\\\">\\r\\n                <input matInput disabled [max]=\\\"custFormMaxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"curDate\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker disabled=\\\"false\\\" #picker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n          </section>\\r\\n        </form>    \\r\\n    </mat-card-content>\\r\\n<mat-card class=\\\"desc-bg\\\">\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"form\\\" (keyup.enter)=\\\"onSubmit()\\\">\\r\\n      <section class=\\\"example-section\\\">\\r\\n          <mat-form-field class=\\\"example-margin prod-col\\\">\\r\\n              <input type=\\\"text\\\" #productName placeholder=\\\"Product Name / Code\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"productName\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n              <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\r\\n                <mat-option *ngFor=\\\"let option of filteredOptions | async\\\"  [value]=\\\"option\\\">\\r\\n                  {{option.prod_name}}\\r\\n                </mat-option>\\r\\n              </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"example-margin quantity-col\\\">\\r\\n            <input matInput formControlName=\\\"quantity\\\" placeholder=\\\"Quantity\\\" type=\\\"number\\\">\\r\\n          </mat-form-field>\\r\\n      </section>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"sno\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> S No </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row;let i = index;\\\" > {{i+1}} </td>\\r\\n          <!-- <td mat-footer-cell *matFooterCellDef>  </td> -->\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Progress Column -->\\r\\n      <ng-container matColumnDef=\\\"productName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_name}} </td>\\r\\n          <!-- <td mat-footer-cell *matFooterCellDef>  </td> -->\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"quantity\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_quan | number : '1.2-2'}} </td>\\r\\n            <!-- <td mat-footer-cell *matFooterCellDef>  </td> -->\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"rate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Rate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_rate_per_unit|currency:'INR'}} </td>\\r\\n            <!-- <td mat-footer-cell *matFooterCellDef> Total </td> -->\\r\\n        </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"tax\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Tax </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_tax|currency:'INR'}}@{{row.tax|number : '1.2-2'}}%</td>\\r\\n          <!-- <td mat-footer-cell *matFooterCellDef>  </td> -->\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"amount\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.sub_amount|currency:'INR'}}</td>\\r\\n        <!-- <td mat-footer-cell *matFooterCellDef> {{getTotalCost()|currency:'INR'}} </td> -->\\r\\n      </ng-container>   \\r\\n      <ng-container matColumnDef=\\\"is_delivered\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Is Delivered </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row; let n = index\\\">\\r\\n          <!-- <span (click)=\\\"_remove(n)\\\"><i class=\\\"material-icons\\\">\\r\\n            delete_forever\\r\\n            </i></span> -->\\r\\n            <mat-checkbox [(ngModel)]=\\\"row.is_delivered\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <!-- <td mat-footer-cell *matFooterCellDef>  </td> -->\\r\\n      </ng-container> \\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row; let n = index\\\">\\r\\n          <span (click)=\\\"_remove(n)\\\"><i class=\\\"material-icons\\\">\\r\\n            delete_forever\\r\\n            </i></span>\\r\\n        </td>\\r\\n        <!-- <td mat-footer-cell *matFooterCellDef>  </td> -->\\r\\n      </ng-container> \\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns;\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      <!-- <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr> -->\\r\\n  </table>\\r\\n  <ng-container *ngIf=\\\"!dataSource || transaction_desc.length === 0\\\">\\r\\n      <mat-card class=\\\"norecords\\\">Please add products !!</mat-card>\\r\\n  </ng-container>\\r\\n  </div>\\r\\n  </mat-card>\\r\\n  <br>\\r\\n  <div class=\\\"pull-right\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!dataSource || transaction_desc.length === 0\\\" (click)=\\\"_saveOrder('print')\\\">Print</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!dataSource || transaction_desc.length === 0\\\" (click)=\\\"_saveOrder('save')\\\">Save</button>\\r\\n  </div>\\r\\n</mat-card>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.prod-col {\\n  width: 70%; }\\n\\n.quantity-col {\\n  width: 30%; }\\n\\n.customer-col {\\n  width: 70%;\\n  font-size: 1.34em; }\\n\\n.date-col {\\n  width: 30%;\\n  font-size: 1.34em; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\\n.clearpix {\\n  margin-top: 10px; }\\n\\n.norecords {\\n  text-align: center;\\n  font: menu; }\\n\\n.desc-bg {\\n  background-color: rgba(221, 60, 60, 0.349); }\\n\\n.invoice-title {\\n  font-weight: bold;\\n  font-size: 2em;\\n  padding-bottom: 1em; }\\n\\n.pull-right {\\n  display: block;\\n  text-align: right; }\\n\\n.pull-right button {\\n    margin-left: 0.23em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3RyYW5zYWN0aW9ucy9kYW1hZ2VzL0M6XFxsb2NhbGRpc2tcXG15d29ya1xcZHN1aXRlXFxjbGllbnQvc3JjXFxhcHBcXGxheW91dFxcdHJhbnNhY3Rpb25zXFxkYW1hZ2VzXFxkYW1hZ2VzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVyxFQUNkOztBQUVEO0VBQ0ksZ0JBQWU7RUFDZixZQUFXLEVBQ2Q7O0FBR0Q7RUFDSSxjQUFhO0VBQ2Isc0JBQXFCO0VBQ3JCLG9CQUFtQjtFQUNuQixhQUFZLEVBQ2Y7O0FBRUQ7RUFDSSxXQUFVLEVBQ2I7O0FBRUQ7RUFDSSxXQUFVLEVBQ2I7O0FBRUQ7RUFDSSxXQUFVO0VBQ1Ysa0JBQWlCLEVBRXBCOztBQUNEO0VBQ0ksV0FBVTtFQUNWLGtCQUFpQixFQUVwQjs7QUFDRDtFQUNJLGFBQVksRUFDZjs7QUFFRDtFQUNJLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLG1CQUFrQjtFQUNsQixXQUFVLEVBQ2I7O0FBRUQ7RUFDSSwyQ0FBMEMsRUFDN0M7O0FBRUQ7RUFDSSxrQkFBaUI7RUFDakIsZUFBYztFQUNkLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGVBQWE7RUFDYixrQkFBaUIsRUFJcEI7O0FBTkQ7SUFJUSxvQkFBbUIsRUFDdEIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvdHJhbnNhY3Rpb25zL2RhbWFnZXMvZGFtYWdlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4uZXhhbXBsZS1zZWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiA2MHB4O1xyXG59XHJcblxyXG4ucHJvZC1jb2x7XHJcbiAgICB3aWR0aDogNzAlO1xyXG59XHJcblxyXG4ucXVhbnRpdHktY29se1xyXG4gICAgd2lkdGg6IDMwJTtcclxufVxyXG5cclxuLmN1c3RvbWVyLWNvbHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBmb250LXNpemU6IDEuMzRlbTtcclxuICAgIFxyXG59XHJcbi5kYXRlLWNvbHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBmb250LXNpemU6IDEuMzRlbTtcclxuICAgIFxyXG59XHJcbi5leGFtcGxlLW1hcmdpbiB7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5jbGVhcnBpeCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4ubm9yZWNvcmRze1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udDogbWVudTtcclxufVxyXG5cclxuLmRlc2MtYmd7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIyMSwgNjAsIDYwLCAwLjM0OSk7XHJcbn1cclxuXHJcbi5pbnZvaWNlLXRpdGxle1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbn1cclxuXHJcbi5wdWxsLXJpZ2h0e1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwLjIzZW07XHJcbiAgICB9XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, ValidatorFn, AbstractControl } \n    from '@angular/forms';\nimport { MatTableDataSource,MatSnackBar } from '@angular/material';\nimport { CommonService } from 'src/app/services/common.service';\nimport { environment } from 'src/environments/environment';\nimport { Product } from 'src/app/interfaces/product';\nimport { Customer } from 'src/app/interfaces/customer';\nimport { TransactionDesc, Damage } from 'src/app/interfaces/transaction';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { formControlBinding } from '@angular/forms/src/directives/reactive_directives/form_control_directive';\n//import { CATEGORY, SUBCATEGORY, BRANDS } from '../../../constants/contants';\n\nexport function objValidator(obj:any): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value && !control.value[obj]) {\n          return { 'valid': true };\n      }\n      return null;\n  };\n}\n\n@Component({\n  selector: 'app-damages',\n  templateUrl: './damages.component.html',\n  styleUrls: ['./damages.component.scss']\n})\nexport class DamagesComponent implements OnInit {\n  displayedColumns = ['sno','productName','quantity','is_delivered','action'];\n  dataSource: MatTableDataSource<TransactionDesc>;\n\n  form: FormGroup;\n  custForm: FormGroup;\n  productList: Product[];\n  customerList: Customer[];\n  transaction_desc: TransactionDesc[]=[];\n  filteredOptions: Observable<Product[]>;\n  customerFilteredOptions: Observable<Customer[]>;\n  sale_type: string = \"Retail\";\n  sale_type_arr: any[];\n  custFormMaxDate = new Date();\n\n  @ViewChild(\"productName\") prodField: ElementRef;\n  constructor(private commonService: CommonService, public snackBar: MatSnackBar) { \n    this.form = new FormGroup({\n      'productName': new FormControl('',[Validators.required,objValidator('prod_name')]),\n      'quantity': new FormControl('',[Validators.required])\n    });\n    this.custForm = new FormGroup({\n      'customerName': new FormControl('',[Validators.required,objValidator('customerName')]),\n      'curDate': new FormControl(new Date(),Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    // this.productList = this.commonService.products;\n    // this._callFilter();  \n    this.loadProduct();\n    this.loadCustomers();\n  }\n\n  loadCustomers(){\n    this.commonService.getMethod(environment.urls.getCustomer).subscribe((data:Customer[]) => {\n      this.customerList = data;\n      this._callCustomerFilter();  \n    });\n  }\n\n  loadProduct(){\n    this.commonService.getMethod(environment.urls.getProduct).subscribe((data:Product[]) => {\n      this.productList = data;\n      this._callFilter();  \n    });\n  }\n\n  displayFn(prod?: Product): string | undefined {\n    return prod ? prod.prod_name : undefined;\n  }\n\n  displayCustomerFn(cust?: Customer): string | undefined {\n    return cust ? cust.customerName : undefined;\n  }\n\n  private _callCustomerFilter(){\n    this.customerFilteredOptions = this.custForm.get(\"customerName\").valueChanges\n      .pipe(\n        startWith(''),\n        map(value => (value && value.length >= 1) ?this._custFilter(value):[])\n      );\n  }\n\n  private _callFilter(){\n    this.filteredOptions = this.form.get(\"productName\").valueChanges\n      .pipe(\n        startWith(''),\n        map(value => (value && value.length >= 1) ? this._filter(value):[])\n      );\n  }\n\n  private _filter(value: string): Product[] {\n    let filterValue = (typeof value == 'string')?value.toLowerCase():\"\";\n    return this.productList.filter(option => option.prod_name.toLowerCase().includes(filterValue));\n  }\n\n  private _custFilter(value: string): Customer[] {\n    let filterValue = (typeof value == 'string')?value.toLowerCase():\"\";\n    return this.customerList.filter(customer => customer.customerName.toLowerCase().includes(filterValue));\n  }\n\n  //load customer rate type for all products\n  public loadCustomerRateType(cust:Customer){\n    this.commonService.getMethod(environment.urls.getRateTypeByCustomer+'/'+cust._id).subscribe((data:any) => {\n      this.sale_type_arr = data;\n    });\n  }\n\n  onSubmit(){\n    if(this.form.status == \"VALID\"){\n      let product = this.form.value.productName;\n      if(this.sale_type_arr){\n        let customer_rate_type = this.sale_type_arr.filter(key => key.prod_id == product._id)[0]; //find customer rate type\n        this.sale_type = customer_rate_type.type;\n      }\n      let rate = this.commonService.getProductPrice(product._id,this.sale_type); // find rate based oo type\n      console.log(rate);\n      let trans_desc:TransactionDesc = {\n        rate_type: this.sale_type,\n        prod_name:product.prod_name,\n        prod_id : product._id,\n        product_id:product.product_id,\n        prod_quan : this.form.value.quantity,\n        prod_rate_per_unit : rate.price,\n        tax: 0,\n        prod_tax : 0,\n        sub_amount : (rate.price * this.form.value.quantity),\n        is_delivered: true\n      }\n      this.transaction_desc.push(trans_desc);\n\n      this.form.reset();      \n      this.dataSource = new MatTableDataSource(this.transaction_desc);      \n      this._callFilter();\n      this.prodField.nativeElement.focus();\n    }    \n  }\n\n  _remove(n:number):void{\n    this.transaction_desc.splice(n,1);\n    this.dataSource = new MatTableDataSource(this.transaction_desc);\n  }\n\n  getTotalCost():number {\n    return this.transaction_desc.map(t => t.sub_amount).reduce((acc, value) => acc + value, 0)+this.transaction_desc.map(t => t.prod_tax).reduce((acc, value) => acc + value, 0);\n  }\n\n  _saveOrder(type:string):void{\n    let data: Damage = {\n      customer_id: this.custForm.value.customerName._id,\n      damage_date: this.custForm.value.curDate,\n      total_amount: this.getTotalCost(),\n      details: this.transaction_desc\n    }\n    this.transaction_desc = [];\n    this.dataSource = new MatTableDataSource(this.transaction_desc);\n    this.form.reset();\n    //reset form\n    this.custForm = new FormGroup({\n      'customerName': new FormControl('',Validators.required),\n      'curDate': new FormControl(new Date(),Validators.required)\n    });\n    //call filter after form reset\n    this._callCustomerFilter();  \n    this._callFilter();  \n    this.commonService.postMethod(environment.urls.postDamage,data).subscribe(data =>{      \n      this.snackBar.open(\"Saved successfully!!\", \"Success\", {\n        duration: 500,\n      });\n    },error =>{\n      this.snackBar.open(error, \"Error\", {\n        duration: 600,\n      });\n    });\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"0.2%\\\" fxLayoutAlign=\\\"center\\\">\\n    <mat-card >\\n        <mat-card-header>\\n            <mat-card-title>Expenses</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content flex=\\\"50\\\">\\n            <section class=\\\"example-section\\\">\\n                <mat-form-field class=\\\"example-margin\\\">\\n                    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n                </mat-form-field>\\n            </section>\\n        </mat-card-content>\\n        \\n        <div class=\\\"mat-elevation-z8\\\" flex=\\\"50\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n        \\n                <!-- <ng-container matColumnDef=\\\"sno\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Area Name </th>\\n                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.areaName\\\"> {{row.areaName}} </td>\\n                </ng-container> -->\\n\\n                <ng-container matColumnDef=\\\"type\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.type}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"description\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"amount\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\\n                    <td mat-cell *matCellDef=\\\"let row\\\" > {{row.amount | currency:'INR'}} </td>\\n                </ng-container>\\n        \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n            </table>\\n        \\n            <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n        </div>\\n    </mat-card>\\n\\n    <mat-card>\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit_form()\\\">\\n        <mat-card-header>\\n            <mat-card-title>Add New Expense</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content flex=\\\"50\\\">\\n            <section class=\\\"example-section\\\">\\n                <mat-form-field class=\\\"example-margin\\\">\\n                    <mat-select matInput placeholder=\\\"Type\\\" formControlName=\\\"type\\\">\\n                            <mat-option *ngFor=\\\"let opt of expense_types\\\" [value]=\\\"opt.key\\\">{{opt.value}}</mat-option>\\n                    </mat-select>\\n                </mat-form-field>\\n            </section>\\n            <section class=\\\"example-section\\\">\\n                <mat-form-field class=\\\"example-margin\\\">\\n                    <textarea matInput rows=\\\"4\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n                </mat-form-field>\\n            </section>\\n            <section class=\\\"example-section\\\">\\n                <mat-form-field class=\\\"example-margin\\\">\\n                    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" formControlName=\\\"amount\\\" placeholder=\\\"Amount\\\">\\n                </mat-form-field>\\n            </section>\\n            <section class=\\\"example-section\\\">\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Submit</button>\\n            </section>\\n\\n        </mat-card-content>\\n        </form>\\n    </mat-card>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 80px; }\\n\\n.example-margin {\\n  margin: 15px; }\\n\\n.clearpix {\\n  margin-top: 10px; }\\n\\n.mat-card {\\n  width: 90%; }\\n\\n.mat-cell {\\n  text-align: left; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3RyYW5zYWN0aW9ucy9leHBlbnNlcy9DOlxcbG9jYWxkaXNrXFxteXdvcmtcXGRzdWl0ZVxcY2xpZW50L3NyY1xcYXBwXFxsYXlvdXRcXHRyYW5zYWN0aW9uc1xcZXhwZW5zZXNcXGV4cGVuc2VzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVyxFQUNkOztBQUVEO0VBQ0ksZ0JBQWU7RUFDZixZQUFXLEVBQ2Q7O0FBRUQ7O0VBRUksV0FBVSxFQUNiOztBQUVEO0VBQ0ksY0FBYTtFQUNiLHNCQUFxQjtFQUNyQixvQkFBbUI7RUFDbkIsYUFBWSxFQUNmOztBQUVEO0VBQ0ksYUFBWSxFQUNmOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25COztBQUVEO0VBQ0ksV0FBUyxFQUNaOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L3RyYW5zYWN0aW9ucy9leHBlbnNlcy9leHBlbnNlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRkLFxyXG50aCB7XHJcbiAgICB3aWR0aDogMjUlO1xyXG59XHJcblxyXG4uZXhhbXBsZS1zZWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiA4MHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1tYXJnaW4ge1xyXG4gICAgbWFyZ2luOiAxNXB4O1xyXG59XHJcblxyXG4uY2xlYXJwaXgge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLm1hdC1jYXJke1xyXG4gICAgd2lkdGg6OTAlO1xyXG59XHJcblxyXG4ubWF0LWNlbGx7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar } from '@angular/material';\n//import { MatDialog, MatDialogRef, } from '@angular/material';\n//import {MatGridListModule} from '@angular/material/grid-list';\nimport { CommonService } from 'src/app/services/common.service';\nimport { environment } from '../../../../environments/environment';\nimport { Expense } from 'src/app/interfaces/expense';\nimport { EXPENSE_TYPE } from '../../../constants/contants';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-expenses',\n  templateUrl: './expenses.component.html',\n  styleUrls: ['./expenses.component.scss']\n})\nexport class ExpensesComponent implements OnInit {\n  displayedColumns = ['type','description','amount'];\n  dataSource: MatTableDataSource<Expense>;\n\n  expenses: Expense[];\n  form:FormGroup;\n  expense_types:any[];\n  //custFormMaxDate = new Date();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public commonService: CommonService, public snackBar:MatSnackBar) { }\n\n  ngOnInit() {\n    this.expense_types = EXPENSE_TYPE.map(val => {\n      return {\n        key: val,\n        value: val\n      }\n    });\n    this.form = new FormGroup({\n      'type': new FormControl('',Validators.required),\n      'description': new FormControl('',Validators.required),\n      'amount': new FormControl('',Validators.required)\n    });\n    this.loadExpenses();\n  }\n\n  loadExpenses(){\n    this.commonService.getMethod(environment.urls.getExpense).subscribe((data:Expense[]) => {\n      this.expenses = data;\n      this.dataSource = new MatTableDataSource(this.expenses);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n    }\n  }\n\n  submit_form(){\n    console.log(this.form);\n    if(this.form.status && this.form.status==\"VALID\"){\n      this.commonService.postMethod(environment.urls.postExpense,this.form.value).subscribe(data =>{        \n        this.snackBar.open(\"Saved successfully!!\", \"Success\", {\n          duration: 500,\n        });\n        this.loadExpenses();\n        this.form.reset();\n      },error =>{\n        this.snackBar.open(error, \"Error\", {\n          duration: 500,\n        });\n      });\n    }\n  }\n\n}\n","module.exports = \"<mat-card>\\n  <mat-card-header>\\n      <mat-card-title>Opening Balances</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n      <section class=\\\"example-section\\\">\\n          <mat-form-field class=\\\"example-margin\\\">\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n          </mat-form-field>\\n      </section>\\n  </mat-card-content>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"customerName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" > {{row.customer.customerName}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"route\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Route </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" > {{row.customer.route.areaName}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" > {{row.amount|currency:'INR'}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" > \\n          <a (click)=\\\"openOrderModal(row)\\\"><mat-icon class=\\\"sidenav-icon\\\">edit</mat-icon></a> \\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n  <div class=\\\"clearpix\\\"> \\n    <button mat-raised-button color =\\\"primary\\\" (click)=\\\"openDialog()\\\">Add New</button>\\n  </div>\\n</mat-card>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\\n.clearpix {\\n  margin-top: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3RyYW5zYWN0aW9ucy9vcGVuaW5nYmFsYW5jZS9DOlxcbG9jYWxkaXNrXFxteXdvcmtcXGRzdWl0ZVxcY2xpZW50L3NyY1xcYXBwXFxsYXlvdXRcXHRyYW5zYWN0aW9uc1xcb3BlbmluZ2JhbGFuY2VcXG9wZW5pbmdiYWxhbmNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVyxFQUNkOztBQUVEO0VBQ0ksZ0JBQWU7RUFDZixZQUFXLEVBQ2Q7O0FBRUQ7O0VBRUksV0FBVSxFQUNiOztBQUVEO0VBQ0ksY0FBYTtFQUNiLHNCQUFxQjtFQUNyQixvQkFBbUI7RUFDbkIsYUFBWSxFQUNmOztBQUVEO0VBQ0ksYUFBWSxFQUNmOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L3RyYW5zYWN0aW9ucy9vcGVuaW5nYmFsYW5jZS9vcGVuaW5nYmFsYW5jZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRkLFxyXG50aCB7XHJcbiAgICB3aWR0aDogMjUlO1xyXG59XHJcblxyXG4uZXhhbXBsZS1zZWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiA2MHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1tYXJnaW4ge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4uY2xlYXJwaXgge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { CommonService } from 'src/app/services/common.service';\nimport { environment } from 'src/environments/environment';\nimport { CommonModalComponent } from '../../masters/common-modal/common-modal.component';\n\n@Component({\n  selector: 'app-openingbalance',\n  templateUrl: './openingbalance.component.html',\n  styleUrls: ['./openingbalance.component.scss']\n})\nexport class OpeningbalanceComponent implements OnInit {\n  \n  displayedColumns = ['customerName','route','amount','action'];\n  dataSource: MatTableDataSource<any>;\n\n  balances: any[];\n  balance_entry_detail : any;\n  customers = [];\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public commonService: CommonService, public dialog:MatDialog) { }\n\n  ngOnInit() {\n    this.loadRoute();\n    this.loadCustomers();\n  }\n\n  loadCustomers(){\n    this.commonService.getMethod(environment.urls.getCustomer).subscribe((data:any) => {\n      for(let val of data){\n        let keyarr = {key:val._id,value:val.customerName};\n        this.customers.push(keyarr);\n      }\n    });\n  }\n\n  loadRoute(){\n    this.commonService.getMethod(environment.urls.getOb).subscribe((data:any[]) => {\n      this.balances = data;\n      this.dataSource = new MatTableDataSource(this.balances);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openDialog(): void {\n    this.balance_entry_detail = [{\n      \"order\":1,\n      \"type\": \"select\",\n      \"inputType\": \"dropdown\",\n      \"name\": \"customer_id\",\n      \"value\": \"\",\n      \"placeholder\": \"Customer\",\n      \"validation\": {\n        \"required\": true\n      },\n      \"options\":this.customers\n    },\n    {\n      \"order\":2,\n      \"type\": \"textarea\",\n      \"inputType\": \"textarea\",\n      \"name\": \"description\",\n      \"value\":\"\",\n      \"placeholder\": \"Description\",\n      \"validation\": {\n        \"required\": true\n      }\n    },\n    {\n      \"order\":3,\n      \"type\": \"input\",\n      \"inputType\": \"number\",\n      \"name\": \"amount\",\n      \"value\":\"\",\n      \"placeholder\": \"Amount\",\n      \"validation\": {\n        \"required\": true\n      }\n    }\n  ];\n\n    const dialogRef = this.dialog.open(CommonModalComponent, {\n      width: '500px',\n      data: {formData:this.balance_entry_detail.sort((a, b) => a.order - b.order),formTitle:\"Opening Balance\",url:environment.urls.postOb }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadRoute();   \n    });\n  }\n\n}\n","module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n      <mat-card-title class=\\\"invoice-title\\\">Purchase</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>      \\r\\n        <form [formGroup]=\\\"vendorForm\\\" >\\r\\n          <section class=\\\"example-section\\\">\\r\\n              <mat-form-field class=\\\"example-margin customer-col\\\">\\r\\n                  <input type=\\\"text\\\" autofocus placeholder=\\\"Vendor Name\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"vendorName\\\" [matAutocomplete]=\\\"vendor\\\">\\r\\n                  <mat-autocomplete autoActiveFirstOption #vendor=\\\"matAutocomplete\\\" [displayWith]=\\\"displayVendorFn\\\">\\r\\n                    <mat-option *ngFor=\\\"let vendor of vendorFilteredOptions | async\\\"  [value]=\\\"vendor\\\">\\r\\n                      {{vendor.vendorName}}\\r\\n                    </mat-option>\\r\\n                  </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"example-margin date-col\\\">\\r\\n                <input matInput disabled [max]=\\\"custFormMaxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"curDate\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker disabled=\\\"false\\\" #picker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n          </section>\\r\\n        </form>    \\r\\n    </mat-card-content>\\r\\n<mat-card class=\\\"desc-bg\\\">\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"form\\\" (keyup.enter)=\\\"onSubmit()\\\">\\r\\n      <section class=\\\"example-section\\\">\\r\\n          <mat-form-field class=\\\"example-margin prod-col\\\">\\r\\n              <input type=\\\"text\\\" #productName placeholder=\\\"Product Name / Code\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"productName\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n              <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\r\\n                <mat-option *ngFor=\\\"let option of filteredOptions | async\\\"  [value]=\\\"option\\\">\\r\\n                  {{option.prod_name}}\\r\\n                </mat-option>\\r\\n              </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"example-margin quantity-col\\\">\\r\\n            <input matInput formControlName=\\\"quantity\\\" placeholder=\\\"Quantity\\\" type=\\\"number\\\">\\r\\n          </mat-form-field>\\r\\n      </section>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"sno\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> S No </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row;let i = index;\\\" > {{i+1}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>  </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Progress Column -->\\r\\n      <ng-container matColumnDef=\\\"productName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_name}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>  </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"quantity\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_quan | number : '1.2-2'}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>  </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"rate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Rate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_rate_per_unit|currency:'INR'}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n        </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"tax\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Tax </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prod_tax|currency:'INR'}}@{{row.tax|number : '1.2-2'}}%</td>\\r\\n          <td mat-footer-cell *matFooterCellDef>  </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"amount\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.sub_amount|currency:'INR'}}</td>\\r\\n        <td mat-footer-cell *matFooterCellDef> {{getTotalCost()|currency:'INR'}} </td>\\r\\n      </ng-container>   \\r\\n      \\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row; let n = index\\\">\\r\\n          <span (click)=\\\"_remove(n)\\\"><i class=\\\"material-icons\\\">\\r\\n            delete_forever\\r\\n            </i></span>\\r\\n        </td>\\r\\n        <td mat-footer-cell *matFooterCellDef>  </td>\\r\\n      </ng-container> \\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns;\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  </table>\\r\\n  <ng-container *ngIf=\\\"!dataSource || transaction_desc.length === 0\\\">\\r\\n      <mat-card class=\\\"norecords\\\">Please add products !!</mat-card>\\r\\n  </ng-container>\\r\\n  </div>\\r\\n  </mat-card>\\r\\n  <br>\\r\\n  <div class=\\\"pull-right\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!dataSource || transaction_desc.length === 0\\\" (click)=\\\"_saveOrder('print')\\\">Print</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!dataSource || transaction_desc.length === 0\\\" (click)=\\\"_saveOrder('save')\\\">Save</button>\\r\\n  </div>\\r\\n</mat-card>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.prod-col {\\n  width: 70%; }\\n\\n.quantity-col {\\n  width: 30%; }\\n\\n.customer-col {\\n  width: 70%;\\n  font-size: 1.34em; }\\n\\n.date-col {\\n  width: 30%;\\n  font-size: 1.34em; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\\n.clearpix {\\n  margin-top: 10px; }\\n\\n.norecords {\\n  text-align: center;\\n  font: menu; }\\n\\n.desc-bg {\\n  background-color: #d4d5dd; }\\n\\n.invoice-title {\\n  font-weight: bold;\\n  font-size: 2em;\\n  padding-bottom: 1em; }\\n\\n.pull-right {\\n  display: block;\\n  text-align: right; }\\n\\n.pull-right button {\\n    margin-left: 0.23em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3RyYW5zYWN0aW9ucy9wdXJjaGFzZS9DOlxcbG9jYWxkaXNrXFxteXdvcmtcXGRzdWl0ZVxcY2xpZW50L3NyY1xcYXBwXFxsYXlvdXRcXHRyYW5zYWN0aW9uc1xccHVyY2hhc2VcXHB1cmNoYXNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVyxFQUNkOztBQUVEO0VBQ0ksZ0JBQWU7RUFDZixZQUFXLEVBQ2Q7O0FBR0Q7RUFDSSxjQUFhO0VBQ2Isc0JBQXFCO0VBQ3JCLG9CQUFtQjtFQUNuQixhQUFZLEVBQ2Y7O0FBRUQ7RUFDSSxXQUFVLEVBQ2I7O0FBRUQ7RUFDSSxXQUFVLEVBQ2I7O0FBRUQ7RUFDSSxXQUFVO0VBQ1Ysa0JBQWlCLEVBRXBCOztBQUNEO0VBQ0ksV0FBVTtFQUNWLGtCQUFpQixFQUVwQjs7QUFDRDtFQUNJLGFBQVksRUFDZjs7QUFFRDtFQUNJLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLG1CQUFrQjtFQUNsQixXQUFVLEVBQ2I7O0FBRUQ7RUFDSSwwQkFBb0MsRUFDdkM7O0FBRUQ7RUFDSSxrQkFBaUI7RUFDakIsZUFBYztFQUNkLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGVBQWE7RUFDYixrQkFBaUIsRUFJcEI7O0FBTkQ7SUFJUSxvQkFBbUIsRUFDdEIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvdHJhbnNhY3Rpb25zL3B1cmNoYXNlL3B1cmNoYXNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuXHJcbi5leGFtcGxlLXNlY3Rpb24ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbn1cclxuXHJcbi5wcm9kLWNvbHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbn1cclxuXHJcbi5xdWFudGl0eS1jb2x7XHJcbiAgICB3aWR0aDogMzAlO1xyXG59XHJcblxyXG4uY3VzdG9tZXItY29se1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIGZvbnQtc2l6ZTogMS4zNGVtO1xyXG4gICAgXHJcbn1cclxuLmRhdGUtY29se1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIGZvbnQtc2l6ZTogMS4zNGVtO1xyXG4gICAgXHJcbn1cclxuLmV4YW1wbGUtbWFyZ2luIHtcclxuICAgIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuLmNsZWFycGl4IHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5ub3JlY29yZHN7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250OiBtZW51O1xyXG59XHJcblxyXG4uZGVzYy1iZ3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTIsIDIxMywgMjIxKTtcclxufVxyXG5cclxuLmludm9pY2UtdGl0bGV7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogMmVtO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDFlbTtcclxufVxyXG5cclxuLnB1bGwtcmlnaHR7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBidXR0b257XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDAuMjNlbTtcclxuICAgIH1cclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, AbstractControl, ValidatorFn } \n    from '@angular/forms';\nimport { MatTableDataSource,MatSnackBar } from '@angular/material';\nimport { CommonService } from 'src/app/services/common.service';\nimport { environment } from 'src/environments/environment';\nimport { Product } from 'src/app/interfaces/product';\nimport { TransactionDesc, Purchase } from 'src/app/interfaces/transaction';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { formControlBinding } from '@angular/forms/src/directives/reactive_directives/form_control_directive';\nimport { Vendor } from 'src/app/interfaces/vendor';\n//import { CATEGORY, SUBCATEGORY, BRANDS } from '../../../constants/contants';\n\nexport function objValidator(obj:any): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value && !control.value[obj]) {\n          return { 'valid': true };\n      }\n      return null;\n  };\n}\n\n@Component({\n  selector: 'app-purchase',\n  templateUrl: './purchase.component.html',\n  styleUrls: ['./purchase.component.scss']\n})\n\nexport class PurchaseComponent implements OnInit {\n  displayedColumns = ['sno','productName','quantity','rate','tax','amount','action'];\n  dataSource: MatTableDataSource<TransactionDesc>;\n\n  form: FormGroup;\n  vendorForm: FormGroup;\n  productList: Product[];\n  vendorList: Vendor[];\n  transaction_desc: TransactionDesc[]=[];\n  filteredOptions: Observable<Product[]>;\n  vendorFilteredOptions: Observable<Vendor[]>;\n  purchase_type: string = \"Purchase\";\n  custFormMaxDate = new Date();\n\n  @ViewChild(\"productName\") prodField: ElementRef;\n  constructor(private commonService: CommonService, public snackBar: MatSnackBar) { \n    this.form = new FormGroup({\n      'productName': new FormControl('',[Validators.required,objValidator('prod_name')]),\n      'quantity': new FormControl('',Validators.required)\n    });\n    this.vendorForm = new FormGroup({\n      'vendorName': new FormControl('',[Validators.required,objValidator('vendorName')]),\n      'curDate': new FormControl(new Date(),Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    // this.productList = this.commonService.products;\n    // this._callFilter();  \n    this.loadProduct();\n    this.loadVendors();\n  }\n\n  loadVendors(){\n    this.commonService.getMethod(environment.urls.getVendor).subscribe((data:Vendor[]) => {\n      this.vendorList = data;\n      this._callVendorFilter();  \n    });\n  }\n\n  loadProduct(){\n    this.commonService.getMethod(environment.urls.getProduct).subscribe((data:Product[]) => {\n      this.productList = data;\n      this._callFilter();  \n    });\n  }\n\n  displayFn(prod?: Product): string | undefined {\n    return prod ? prod.prod_name : undefined;\n  }\n\n  displayVendorFn(cust?: Vendor): string | undefined {\n    return cust ? cust.vendorName : undefined;\n  }\n\n  private _callVendorFilter(){\n    this.vendorFilteredOptions = this.vendorForm.get(\"vendorName\").valueChanges\n      .pipe(\n        startWith(''),\n        map(value => (value && value.length >= 1) ?this._custFilter(value):[])\n      );\n  }\n\n  private _callFilter(){\n    this.filteredOptions = this.form.get(\"productName\").valueChanges\n      .pipe(\n        startWith(''),\n        map(value => (value && value.length >= 1) ? this._filter(value):[])\n      );\n  }\n\n  private _filter(value: string): Product[] {\n    let filterValue = (typeof value == 'string')?value.toLowerCase():\"\";\n    return this.productList.filter(option => option.prod_name.toLowerCase().includes(filterValue));\n  }\n\n  private _custFilter(value: string): Vendor[] {\n    let filterValue = (typeof value == 'string')?value.toLowerCase():\"\";\n    return this.vendorList.filter(vendor => vendor.vendorName.toLowerCase().includes(filterValue));\n  }\n\n  onSubmit(){\n    if(this.form.status == \"VALID\"){\n      let product = this.form.value.productName;\n      let rate = this.commonService.getProductPrice(product._id,this.purchase_type); // find rate based oo type\n      console.log(rate);\n      let trans_desc:TransactionDesc = {\n        rate_type: 'Purchase',\n        prod_name:product.prod_name,\n        prod_id : product._id,\n        product_id:product.product_id,\n        prod_quan : this.form.value.quantity,\n        prod_rate_per_unit : rate.price,\n        tax: rate.tax?rate.tax:0,\n        prod_tax : rate.tax ? (rate.price * this.form.value.quantity)*rate.tax/100:0,\n        sub_amount : (rate.price * this.form.value.quantity)\n      }\n      this.transaction_desc.push(trans_desc);\n\n      this.form.reset();      \n      this.dataSource = new MatTableDataSource(this.transaction_desc);      \n      this._callFilter();\n      this.prodField.nativeElement.focus();\n    }    \n  }\n\n  _remove(n:number):void{\n    this.transaction_desc.splice(n,1);\n    this.dataSource = new MatTableDataSource(this.transaction_desc);\n  }\n\n  getTotalCost():number {\n    return this.transaction_desc.map(t => t.sub_amount).reduce((acc, value) => acc + value, 0)+this.transaction_desc.map(t => t.prod_tax).reduce((acc, value) => acc + value, 0);\n  }\n\n  _saveOrder(type:string):void{\n    let data: Purchase = {\n      vendor_id: this.vendorForm.value.vendorName._id,\n      purchase_date: this.vendorForm.value.curDate,\n      total_amount: this.getTotalCost(),\n      details: this.transaction_desc\n    }\n    this.transaction_desc = [];\n    this.dataSource = new MatTableDataSource(this.transaction_desc);\n    this.form.reset();\n    //reset form\n    this.vendorForm = new FormGroup({\n      'vendorName': new FormControl('',Validators.required),\n      'curDate': new FormControl(new Date(),Validators.required)\n    });\n    // filter options after reset\n    this._callVendorFilter();  \n    this._callFilter();  \n    this.commonService.postMethod(environment.urls.postPurchase,data).subscribe(data =>{      \n      this.snackBar.open(\"Saved successfully!!\", \"Success\", {\n        duration: 500,\n      });\n    },error =>{\n      this.snackBar.open(error, \"Error\", {\n        duration: 600,\n      });\n    });\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SalesComponent } from './sales/sales.component';\r\nimport { PurchaseComponent } from './purchase/purchase.component';\r\nimport { ExpensesComponent } from './expenses/expenses.component';\r\nimport { DamagesComponent } from './damages/damages.component';\r\nimport { OpeningbalanceComponent } from './openingbalance/openingbalance.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'sales',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'sales',\r\n    component: SalesComponent\r\n  },\r\n  {\r\n    path: 'purchase',\r\n    component: PurchaseComponent\r\n  },\r\n  {\r\n    path: 'expenses',\r\n    component: ExpensesComponent\r\n  },\r\n  {\r\n    path: 'damages',\r\n    component: DamagesComponent\r\n  },\r\n  {\r\n    path: 'openingbalance',\r\n    component: OpeningbalanceComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TransactionsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule as FormModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatAutocompleteModule, MatCardModule, MatCheckboxModule, MatDatepickerModule,\r\n  MatFormFieldModule, MatInputModule, MatNativeDateModule, MatRadioModule, MatSelectModule,\r\n  MatSliderModule, MatSlideToggleModule, MatTableModule, MatDialogModule, MatPaginatorModule, MatIconModule\r\n} from '@angular/material';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { TransactionsRoutingModule } from './transactions-routing.module';\r\nimport { SalesComponent } from './sales/sales.component';\r\nimport { PurchaseComponent } from './purchase/purchase.component';\r\nimport { ExpensesComponent } from './expenses/expenses.component';\r\nimport { DamagesComponent } from './damages/damages.component';\r\nimport { DsuiteModule } from '../common/dsuite.module';\r\nimport { OpeningbalanceComponent } from './openingbalance/openingbalance.component';\r\nimport { MastersModule } from '../masters/masters.module';\r\n\r\n@NgModule({\r\n  declarations: [SalesComponent, PurchaseComponent, ExpensesComponent, DamagesComponent, OpeningbalanceComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TransactionsRoutingModule,\r\n    MatAutocompleteModule,\r\n    FormModule,\r\n    ReactiveFormsModule,\r\n    MatSlideToggleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatPaginatorModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    FlexLayoutModule.withConfig({addFlexToParent: false}) ,\r\n    DsuiteModule,\r\n    MastersModule\r\n  ],\r\n  //entryComponents: [CommonModalComponent]\r\n})\r\nexport class TransactionsModule { }\r\n"],"sourceRoot":""}